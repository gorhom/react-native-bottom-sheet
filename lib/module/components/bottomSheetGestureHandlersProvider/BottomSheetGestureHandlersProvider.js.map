{"version":3,"sources":["BottomSheetGestureHandlersProvider.tsx"],"names":["React","useMemo","GESTURE_SOURCE","useGestureHandler","useBottomSheetInternal","useGestureEventsHandlersDefault","BottomSheetGestureHandlersContext","useSharedValue","BottomSheetGestureHandlersProvider","gestureEventsHandlersHook","useGestureEventsHandlers","children","animatedGestureSource","UNDETERMINED","animatedContentGestureState","animatedHandleGestureState","handleOnStart","handleOnActive","handleOnEnd","contentPanGestureHandler","CONTENT","scrollablePanGestureHandler","SCROLLABLE","handlePanGestureHandler","HANDLE","contextValue"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,SACEC,iBADF,EAEEC,sBAFF,EAGEC,+BAHF,QAIO,aAJP;AAKA,SAASC,iCAAT,QAAkD,gBAAlD;AAEA,SAASC,cAAT,QAA+B,yBAA/B;;AAEA,MAAMC,kCAAkC,GAAG,CAAC;AAC1CC,EAAAA,yBAAyB,EACvBC,wBAAwB,GAAGL,+BAFa;AAG1CM,EAAAA;AAH0C,CAAD,KAII;AAC7C;AACA,QAAMC,qBAAqB,GAAGL,cAAc,CAC1CL,cAAc,CAACW,YAD2B,CAA5C,CAF6C,CAK7C;AAEA;;AACA,QAAM;AAAEC,IAAAA,2BAAF;AAA+BC,IAAAA;AAA/B,MACJX,sBAAsB,EADxB;AAEA,QAAM;AAAEY,IAAAA,aAAF;AAAiBC,IAAAA,cAAjB;AAAiCC,IAAAA;AAAjC,MACJR,wBAAwB,EAD1B,CAV6C,CAY7C;AAEA;;AACA,QAAMS,wBAAwB,GAAGhB,iBAAiB,CAChDD,cAAc,CAACkB,OADiC,EAEhDN,2BAFgD,EAGhDF,qBAHgD,EAIhDI,aAJgD,EAKhDC,cALgD,EAMhDC,WANgD,CAAlD;AASA,QAAMG,2BAA2B,GAAGlB,iBAAiB,CACnDD,cAAc,CAACoB,UADoC,EAEnDR,2BAFmD,EAGnDF,qBAHmD,EAInDI,aAJmD,EAKnDC,cALmD,EAMnDC,WANmD,CAArD;AASA,QAAMK,uBAAuB,GAAGpB,iBAAiB,CAC/CD,cAAc,CAACsB,MADgC,EAE/CT,0BAF+C,EAG/CH,qBAH+C,EAI/CI,aAJ+C,EAK/CC,cAL+C,EAM/CC,WAN+C,CAAjD,CAjC6C,CAyC7C;AAEA;;AACA,QAAMO,YAAY,GAAGxB,OAAO,CAC1B,OAAO;AACLkB,IAAAA,wBADK;AAELI,IAAAA,uBAFK;AAGLF,IAAAA,2BAHK;AAILT,IAAAA;AAJK,GAAP,CAD0B,EAO1B,CACEO,wBADF,EAEEI,uBAFF,EAGEF,2BAHF,EAIET,qBAJF,CAP0B,CAA5B,CA5C6C,CA0D7C;;AACA,sBACE,oBAAC,iCAAD,CAAmC,QAAnC;AAA4C,IAAA,KAAK,EAAEa;AAAnD,KACGd,QADH,CADF;AAKD,CApED;;AAsEA,eAAeH,kCAAf","sourcesContent":["import React, { useMemo } from 'react';\nimport { GESTURE_SOURCE } from '../../constants';\nimport {\n  useGestureHandler,\n  useBottomSheetInternal,\n  useGestureEventsHandlersDefault,\n} from '../../hooks';\nimport { BottomSheetGestureHandlersContext } from '../../contexts';\nimport type { BottomSheetGestureHandlersProviderProps } from './types';\nimport { useSharedValue } from 'react-native-reanimated';\n\nconst BottomSheetGestureHandlersProvider = ({\n  gestureEventsHandlersHook:\n    useGestureEventsHandlers = useGestureEventsHandlersDefault,\n  children,\n}: BottomSheetGestureHandlersProviderProps) => {\n  //#region variables\n  const animatedGestureSource = useSharedValue<GESTURE_SOURCE>(\n    GESTURE_SOURCE.UNDETERMINED\n  );\n  //#endregion\n\n  //#region hooks\n  const { animatedContentGestureState, animatedHandleGestureState } =\n    useBottomSheetInternal();\n  const { handleOnStart, handleOnActive, handleOnEnd } =\n    useGestureEventsHandlers();\n  //#endregion\n\n  //#region gestures\n  const contentPanGestureHandler = useGestureHandler(\n    GESTURE_SOURCE.CONTENT,\n    animatedContentGestureState,\n    animatedGestureSource,\n    handleOnStart,\n    handleOnActive,\n    handleOnEnd\n  );\n\n  const scrollablePanGestureHandler = useGestureHandler(\n    GESTURE_SOURCE.SCROLLABLE,\n    animatedContentGestureState,\n    animatedGestureSource,\n    handleOnStart,\n    handleOnActive,\n    handleOnEnd\n  );\n\n  const handlePanGestureHandler = useGestureHandler(\n    GESTURE_SOURCE.HANDLE,\n    animatedHandleGestureState,\n    animatedGestureSource,\n    handleOnStart,\n    handleOnActive,\n    handleOnEnd\n  );\n  //#endregion\n\n  //#region context\n  const contextValue = useMemo(\n    () => ({\n      contentPanGestureHandler,\n      handlePanGestureHandler,\n      scrollablePanGestureHandler,\n      animatedGestureSource,\n    }),\n    [\n      contentPanGestureHandler,\n      handlePanGestureHandler,\n      scrollablePanGestureHandler,\n      animatedGestureSource,\n    ]\n  );\n  //#endregion\n  return (\n    <BottomSheetGestureHandlersContext.Provider value={contextValue}>\n      {children}\n    </BottomSheetGestureHandlersContext.Provider>\n  );\n};\n\nexport default BottomSheetGestureHandlersProvider;\n"]}