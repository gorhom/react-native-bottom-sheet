{"version":3,"sources":["BottomSheetHandleContainer.tsx"],"names":["React","memo","useCallback","useMemo","PanGestureHandler","Animated","BottomSheetHandle","useBottomSheetGestureHandlers","useBottomSheetInternal","print","BottomSheetHandleContainerComponent","animatedIndex","animatedPosition","simultaneousHandlers","_internalSimultaneousHandlers","enableHandlePanningGesture","handleHeight","handleComponent","_providedHandleComponent","handleStyle","_providedHandleStyle","handleIndicatorStyle","_providedIndicatorStyle","activeOffsetX","activeOffsetY","failOffsetX","failOffsetY","waitFor","_providedSimultaneousHandlers","handlePanGestureHandler","refs","push","Array","isArray","handleContainerLayout","nativeEvent","layout","height","value","component","BottomSheetHandleContainer","displayName","method","params","HandleComponent","undefined"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo } from 'react';\nimport type { LayoutChangeEvent } from 'react-native';\nimport { PanGestureHandler } from 'react-native-gesture-handler';\nimport Animated from 'react-native-reanimated';\nimport BottomSheetHandle from '../bottomSheetHandle';\nimport {\n  useBottomSheetGestureHandlers,\n  useBottomSheetInternal,\n} from '../../hooks';\nimport { print } from '../../utilities';\nimport type { BottomSheetHandleContainerProps } from './types';\n\nfunction BottomSheetHandleContainerComponent({\n  animatedIndex,\n  animatedPosition,\n  simultaneousHandlers: _internalSimultaneousHandlers,\n  enableHandlePanningGesture,\n  handleHeight,\n  handleComponent: _providedHandleComponent,\n  handleStyle: _providedHandleStyle,\n  handleIndicatorStyle: _providedIndicatorStyle,\n}: BottomSheetHandleContainerProps) {\n  //#region hooks\n  const {\n    activeOffsetX,\n    activeOffsetY,\n    failOffsetX,\n    failOffsetY,\n    waitFor,\n    simultaneousHandlers: _providedSimultaneousHandlers,\n  } = useBottomSheetInternal();\n  const { handlePanGestureHandler } = useBottomSheetGestureHandlers();\n  //#endregion\n\n  //#region variables\n  const simultaneousHandlers = useMemo<any>(() => {\n    const refs = [];\n\n    if (_internalSimultaneousHandlers) {\n      refs.push(_internalSimultaneousHandlers);\n    }\n\n    if (_providedSimultaneousHandlers) {\n      if (Array.isArray(_providedSimultaneousHandlers)) {\n        refs.push(..._providedSimultaneousHandlers);\n      } else {\n        refs.push(_providedSimultaneousHandlers);\n      }\n    }\n\n    return refs;\n  }, [_providedSimultaneousHandlers, _internalSimultaneousHandlers]);\n  //#endregion\n\n  //#region callbacks\n  const handleContainerLayout = useCallback(\n    function handleContainerLayout({\n      nativeEvent: {\n        layout: { height },\n      },\n    }: LayoutChangeEvent) {\n      handleHeight.value = height;\n\n      print({\n        component: BottomSheetHandleContainer.displayName,\n        method: 'handleContainerLayout',\n        params: {\n          height,\n        },\n      });\n    },\n    [handleHeight]\n  );\n  //#endregion\n\n  //#region renders\n  const HandleComponent =\n    _providedHandleComponent === undefined\n      ? BottomSheetHandle\n      : _providedHandleComponent;\n  return HandleComponent !== null ? (\n    <PanGestureHandler\n      enabled={enableHandlePanningGesture}\n      waitFor={waitFor}\n      simultaneousHandlers={simultaneousHandlers}\n      shouldCancelWhenOutside={false}\n      activeOffsetX={activeOffsetX}\n      activeOffsetY={activeOffsetY}\n      failOffsetX={failOffsetX}\n      failOffsetY={failOffsetY}\n      onGestureEvent={handlePanGestureHandler}\n    >\n      <Animated.View\n        key=\"BottomSheetHandleContainer\"\n        accessible={true}\n        accessibilityRole=\"adjustable\"\n        accessibilityLabel=\"Bottom Sheet handle\"\n        accessibilityHint=\"Drag up or down to extend or minimize the Bottom Sheet\"\n        onLayout={handleContainerLayout}\n      >\n        <HandleComponent\n          animatedIndex={animatedIndex}\n          animatedPosition={animatedPosition}\n          style={_providedHandleStyle}\n          indicatorStyle={_providedIndicatorStyle}\n        />\n      </Animated.View>\n    </PanGestureHandler>\n  ) : null;\n  //#endregion\n}\n\nconst BottomSheetHandleContainer = memo(BottomSheetHandleContainerComponent);\nBottomSheetHandleContainer.displayName = 'BottomSheetHandleContainer';\n\nexport default BottomSheetHandleContainer;\n"]}