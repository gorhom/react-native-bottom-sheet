{"version":3,"sources":["useScrollEventsHandlersDefault.ts"],"names":["scrollTo","useWorkletCallback","useBottomSheetInternal","ANIMATION_STATE","SCROLLABLE_STATE","SHEET_STATE","useScrollEventsHandlersDefault","scrollableRef","scrollableContentOffsetY","animatedSheetState","animatedScrollableState","animatedAnimationState","animatedScrollableContentOffsetY","rootScrollableContentOffsetY","handleOnScroll","_","context","value","EXTENDED","FILL_PARENT","shouldLockInitialPosition","LOCKED","lockPosition","initialContentOffsetY","handleOnBeginDrag","contentOffset","y","handleOnEndDrag","RUNNING","handleOnMomentumEnd"],"mappings":"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","sourcesContent":["import { scrollTo, useWorkletCallback } from 'react-native-reanimated';\nimport { useBottomSheetInternal } from './useBottomSheetInternal';\nimport { ANIMATION_STATE, SCROLLABLE_STATE, SHEET_STATE } from '../constants';\nimport type {\n  ScrollEventsHandlersHookType,\n  ScrollEventHandlerCallbackType,\n} from '../types';\n\nexport type ScrollEventContextType = {\n  initialContentOffsetY: number;\n  shouldLockInitialPosition: boolean;\n};\n\nexport const useScrollEventsHandlersDefault: ScrollEventsHandlersHookType = (\n  scrollableRef,\n  scrollableContentOffsetY\n) => {\n  // hooks\n  const {\n    animatedSheetState,\n    animatedScrollableState,\n    animatedAnimationState,\n    animatedScrollableContentOffsetY: rootScrollableContentOffsetY,\n  } = useBottomSheetInternal();\n\n  //#region callbacks\n  const handleOnScroll: ScrollEventHandlerCallbackType<ScrollEventContextType> =\n    useWorkletCallback(\n      (_, context) => {\n        /**\n         * if sheet position is extended or fill parent, then we reset\n         * `shouldLockInitialPosition` value to false.\n         */\n        if (\n          animatedSheetState.value === SHEET_STATE.EXTENDED ||\n          animatedSheetState.value === SHEET_STATE.FILL_PARENT\n        ) {\n          context.shouldLockInitialPosition = false;\n        }\n\n        if (animatedScrollableState.value === SCROLLABLE_STATE.LOCKED) {\n          const lockPosition = context.shouldLockInitialPosition\n            ? context.initialContentOffsetY ?? 0\n            : 0;\n          // @ts-ignore\n          scrollTo(scrollableRef, 0, lockPosition, false);\n          scrollableContentOffsetY.value = lockPosition;\n          return;\n        }\n      },\n      [\n        scrollableRef,\n        scrollableContentOffsetY,\n        animatedScrollableState,\n        animatedSheetState,\n      ]\n    );\n  const handleOnBeginDrag: ScrollEventHandlerCallbackType<ScrollEventContextType> =\n    useWorkletCallback(\n      ({ contentOffset: { y } }, context) => {\n        scrollableContentOffsetY.value = y;\n        rootScrollableContentOffsetY.value = y;\n        context.initialContentOffsetY = y;\n\n        /**\n         * if sheet position not extended or fill parent and the scrollable position\n         * not at the top, then we should lock the initial scrollable position.\n         */\n        if (\n          animatedSheetState.value !== SHEET_STATE.EXTENDED &&\n          animatedSheetState.value !== SHEET_STATE.FILL_PARENT &&\n          y > 0\n        ) {\n          context.shouldLockInitialPosition = true;\n        } else {\n          context.shouldLockInitialPosition = false;\n        }\n      },\n      [\n        scrollableContentOffsetY,\n        animatedSheetState,\n        rootScrollableContentOffsetY,\n      ]\n    );\n  const handleOnEndDrag: ScrollEventHandlerCallbackType<ScrollEventContextType> =\n    useWorkletCallback(\n      ({ contentOffset: { y } }, context) => {\n        if (animatedScrollableState.value === SCROLLABLE_STATE.LOCKED) {\n          const lockPosition = context.shouldLockInitialPosition\n            ? context.initialContentOffsetY ?? 0\n            : 0;\n          // @ts-ignore\n          scrollTo(scrollableRef, 0, lockPosition, false);\n          scrollableContentOffsetY.value = lockPosition;\n          return;\n        }\n        if (animatedAnimationState.value !== ANIMATION_STATE.RUNNING) {\n          scrollableContentOffsetY.value = y;\n          rootScrollableContentOffsetY.value = y;\n        }\n      },\n      [\n        scrollableRef,\n        scrollableContentOffsetY,\n        animatedAnimationState,\n        animatedScrollableState,\n        rootScrollableContentOffsetY,\n      ]\n    );\n  const handleOnMomentumEnd: ScrollEventHandlerCallbackType<ScrollEventContextType> =\n    useWorkletCallback(\n      ({ contentOffset: { y } }, context) => {\n        if (animatedScrollableState.value === SCROLLABLE_STATE.LOCKED) {\n          const lockPosition = context.shouldLockInitialPosition\n            ? context.initialContentOffsetY ?? 0\n            : 0;\n          // @ts-ignore\n          scrollTo(scrollableRef, 0, lockPosition, false);\n          scrollableContentOffsetY.value = 0;\n          return;\n        }\n        if (animatedAnimationState.value !== ANIMATION_STATE.RUNNING) {\n          scrollableContentOffsetY.value = y;\n          rootScrollableContentOffsetY.value = y;\n        }\n      },\n      [\n        scrollableContentOffsetY,\n        scrollableRef,\n        animatedAnimationState,\n        animatedScrollableState,\n        rootScrollableContentOffsetY,\n      ]\n    );\n  //#endregion\n\n  return {\n    handleOnScroll,\n    handleOnBeginDrag,\n    handleOnEndDrag,\n    handleOnMomentumEnd,\n  };\n};\n"]}