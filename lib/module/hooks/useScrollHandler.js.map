{"version":3,"sources":["useScrollHandler.ts"],"names":["runOnJS","useAnimatedRef","useAnimatedScrollHandler","useSharedValue","useScrollEventsHandlersDefault","workletNoop","noop","useScrollHandler","useScrollEventsHandlers","onScroll","onScrollBeginDrag","onScrollEndDrag","scrollableRef","scrollableContentOffsetY","handleOnScroll","handleOnBeginDrag","handleOnEndDrag","handleOnMomentumEnd","handleOnMomentumBegin","scrollHandler","event","context","nativeEvent","onBeginDrag","onEndDrag","onMomentumBegin","onMomentumEnd"],"mappings":"AAAA,SACEA,OADF,EAEEC,cAFF,EAGEC,wBAHF,EAIEC,cAJF,QAKO,yBALP;AAMA,SAASC,8BAAT,QAA+C,kCAA/C;AACA,SAASC,WAAW,IAAIC,IAAxB,QAAoC,cAApC;AAGA,OAAO,MAAMC,gBAAgB,GAAG,CAC9BC,uBAAuB,GAAGJ,8BADI,EAE9BK,QAF8B,EAG9BC,iBAH8B,EAI9BC,eAJ8B,KAK3B;AACH;AACA,QAAMC,aAAa,GAAGX,cAAc,EAApC,CAFG,CAIH;;AACA,QAAMY,wBAAwB,GAAGV,cAAc,CAAS,CAAT,CAA/C,CALG,CAOH;;AACA,QAAM;AACJW,IAAAA,cAAc,GAAGR,IADb;AAEJS,IAAAA,iBAAiB,GAAGT,IAFhB;AAGJU,IAAAA,eAAe,GAAGV,IAHd;AAIJW,IAAAA,mBAAmB,GAAGX,IAJlB;AAKJY,IAAAA,qBAAqB,GAAGZ;AALpB,MAMFE,uBAAuB,CAACI,aAAD,EAAgBC,wBAAhB,CAN3B,CARG,CAgBH;;AACA,QAAMM,aAAa,GAAGjB,wBAAwB,CAC5C;AACEO,IAAAA,QAAQ,EAAE,CAACW,KAAD,EAAQC,OAAR,KAAoB;AAC5BP,MAAAA,cAAc,CAACM,KAAD,EAAQC,OAAR,CAAd;;AAEA,UAAIZ,QAAJ,EAAc;AACZT,QAAAA,OAAO,CAACS,QAAD,CAAP,CAAkB;AAAEa,UAAAA,WAAW,EAAEF;AAAf,SAAlB;AACD;AACF,KAPH;AAQEG,IAAAA,WAAW,EAAE,CAACH,KAAD,EAAQC,OAAR,KAAoB;AAC/BN,MAAAA,iBAAiB,CAACK,KAAD,EAAQC,OAAR,CAAjB;;AAEA,UAAIX,iBAAJ,EAAuB;AACrBV,QAAAA,OAAO,CAACU,iBAAD,CAAP,CAA2B;AAAEY,UAAAA,WAAW,EAAEF;AAAf,SAA3B;AACD;AACF,KAdH;AAeEI,IAAAA,SAAS,EAAE,CAACJ,KAAD,EAAQC,OAAR,KAAoB;AAC7BL,MAAAA,eAAe,CAACI,KAAD,EAAQC,OAAR,CAAf;;AAEA,UAAIV,eAAJ,EAAqB;AACnBX,QAAAA,OAAO,CAACW,eAAD,CAAP,CAAyB;AAAEW,UAAAA,WAAW,EAAEF;AAAf,SAAzB;AACD;AACF,KArBH;AAsBEK,IAAAA,eAAe,EAAEP,qBAtBnB;AAuBEQ,IAAAA,aAAa,EAAET;AAvBjB,GAD4C,EA0B5C,CACEH,cADF,EAEEC,iBAFF,EAGEC,eAHF,EAIEE,qBAJF,EAKED,mBALF,EAMER,QANF,EAOEC,iBAPF,EAQEC,eARF,CA1B4C,CAA9C;AAsCA,SAAO;AAAEQ,IAAAA,aAAF;AAAiBP,IAAAA,aAAjB;AAAgCC,IAAAA;AAAhC,GAAP;AACD,CA7DM","sourcesContent":["import {\n  runOnJS,\n  useAnimatedRef,\n  useAnimatedScrollHandler,\n  useSharedValue,\n} from 'react-native-reanimated';\nimport { useScrollEventsHandlersDefault } from './useScrollEventsHandlersDefault';\nimport { workletNoop as noop } from '../utilities';\nimport type { Scrollable, ScrollableEvent } from '../types';\n\nexport const useScrollHandler = (\n  useScrollEventsHandlers = useScrollEventsHandlersDefault,\n  onScroll?: ScrollableEvent,\n  onScrollBeginDrag?: ScrollableEvent,\n  onScrollEndDrag?: ScrollableEvent\n) => {\n  // refs\n  const scrollableRef = useAnimatedRef<Scrollable>();\n\n  // variables\n  const scrollableContentOffsetY = useSharedValue<number>(0);\n\n  // hooks\n  const {\n    handleOnScroll = noop,\n    handleOnBeginDrag = noop,\n    handleOnEndDrag = noop,\n    handleOnMomentumEnd = noop,\n    handleOnMomentumBegin = noop,\n  } = useScrollEventsHandlers(scrollableRef, scrollableContentOffsetY);\n\n  // callbacks\n  const scrollHandler = useAnimatedScrollHandler(\n    {\n      onScroll: (event, context) => {\n        handleOnScroll(event, context);\n\n        if (onScroll) {\n          runOnJS(onScroll)({ nativeEvent: event });\n        }\n      },\n      onBeginDrag: (event, context) => {\n        handleOnBeginDrag(event, context);\n\n        if (onScrollBeginDrag) {\n          runOnJS(onScrollBeginDrag)({ nativeEvent: event });\n        }\n      },\n      onEndDrag: (event, context) => {\n        handleOnEndDrag(event, context);\n\n        if (onScrollEndDrag) {\n          runOnJS(onScrollEndDrag)({ nativeEvent: event });\n        }\n      },\n      onMomentumBegin: handleOnMomentumBegin,\n      onMomentumEnd: handleOnMomentumEnd,\n    },\n    [\n      handleOnScroll,\n      handleOnBeginDrag,\n      handleOnEndDrag,\n      handleOnMomentumBegin,\n      handleOnMomentumEnd,\n      onScroll,\n      onScrollBeginDrag,\n      onScrollEndDrag,\n    ]\n  );\n\n  return { scrollHandler, scrollableRef, scrollableContentOffsetY };\n};\n"]}