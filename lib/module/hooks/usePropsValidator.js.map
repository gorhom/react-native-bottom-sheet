{"version":3,"sources":["usePropsValidator.ts"],"names":["useMemo","invariant","INITIAL_SNAP_POINT","usePropsValidator","index","snapPoints","enableDynamicSizing","topInset","bottomInset","_snapPoints","value","map","snapPoint","_snapPoint","parseInt","replace","length"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,SAASC,kBAAT,QAAmC,qCAAnC;;AAGA;AACA;AACA;AACA;AAEA,OAAO,MAAMC,iBAAiB,GAAG,CAAC;AAChCC,EAAAA,KADgC;AAEhCC,EAAAA,UAFgC;AAGhCC,EAAAA,mBAHgC;AAIhCC,EAAAA,QAJgC;AAKhCC,EAAAA;AALgC,CAAD,KAMT;AACtBR,EAAAA,OAAO,CAAC,MAAM;AACZ;AACA,UAAMS,WAAW,GAAGJ,UAAU,GAC1B,WAAWA,UAAX,GACEA,UAAU,CAACK,KADb,GAEEL,UAHwB,GAI1B,EAJJ;;AAKAJ,IAAAA,SAAS,CACPQ,WAAW,IAAIH,mBADR,EAEN,wEAFM,CAAT;;AAKAG,IAAAA,WAAW,CAACE,GAAZ,CAAgBC,SAAS,IAAI;AAC3B,YAAMC,UAAU,GACd,OAAOD,SAAP,KAAqB,QAArB,GACIA,SADJ,GAEIE,QAAQ,CAACF,SAAS,CAACG,OAAV,CAAkB,GAAlB,EAAuB,EAAvB,CAAD,EAA6B,EAA7B,CAHd;;AAKAd,MAAAA,SAAS,CACPY,UAAU,GAAG,CAAb,IAAkBA,UAAU,KAAKX,kBAD1B,EAEN,eAAcU,SAAU,qGAFlB,CAAT;AAID,KAVD;;AAYAX,IAAAA,SAAS,CACP,WAAWQ,WAAX,IAA0BA,WAAW,CAACO,MAAZ,GAAqB,CAA/C,IAAoDV,mBAD7C,EAEN,mFAFM,CAAT,CAxBY,CA4BZ;AAEA;;AACAL,IAAAA,SAAS,CACP,OAAOG,KAAP,KAAiB,QAAjB,IAA6B,OAAOA,KAAP,KAAiB,WADvC,EAEN,uEAFM,CAAT;AAKAH,IAAAA,SAAS,CACPK,mBAAmB,KAChB,OAAOF,KAAP,KAAiB,QAAjB,GACGA,KAAK,IAAI,CAAC,CAAV,IAAeA,KAAK,IAAIK,WAAW,CAACO,MAAZ,GAAqB,CADhD,GAEG,IAHa,CADZ,EAKN,oGACCP,WAAW,CAACO,MAAZ,GAAqB,CACtB,EAPM,CAAT,CApCY,CA6CZ;AAEA;;AACAf,IAAAA,SAAS,CACP,OAAOM,QAAP,KAAoB,QAApB,IAAgC,OAAOA,QAAP,KAAoB,WAD7C,EAEN,0EAFM,CAAT;AAIAN,IAAAA,SAAS,CACP,OAAOO,WAAP,KAAuB,QAAvB,IAAmC,OAAOA,WAAP,KAAuB,WADnD,EAEN,6EAFM,CAAT,CApDY,CAwDZ;AAEA;AACD,GA3DM,EA2DJ,CAACJ,KAAD,EAAQC,UAAR,EAAoBE,QAApB,EAA8BC,WAA9B,EAA2CF,mBAA3C,CA3DI,CAAP;AA4DD,CAnEM","sourcesContent":["import { useMemo } from 'react';\nimport invariant from 'invariant';\nimport { INITIAL_SNAP_POINT } from '../components/bottomSheet/constants';\nimport type { BottomSheetProps } from '../components/bottomSheet';\n\n/**\n * @todo\n * replace this with `prop-types`.\n */\n\nexport const usePropsValidator = ({\n  index,\n  snapPoints,\n  enableDynamicSizing,\n  topInset,\n  bottomInset,\n}: BottomSheetProps) => {\n  useMemo(() => {\n    //#region snap points\n    const _snapPoints = snapPoints\n      ? 'value' in snapPoints\n        ? snapPoints.value\n        : snapPoints\n      : [];\n    invariant(\n      _snapPoints || enableDynamicSizing,\n      `'snapPoints' was not provided! please provide at least one snap point.`\n    );\n\n    _snapPoints.map(snapPoint => {\n      const _snapPoint =\n        typeof snapPoint === 'number'\n          ? snapPoint\n          : parseInt(snapPoint.replace('%', ''), 10);\n\n      invariant(\n        _snapPoint > 0 || _snapPoint === INITIAL_SNAP_POINT,\n        `Snap point '${snapPoint}' is invalid. if you want to allow user to close the sheet, Please use 'enablePanDownToClose' prop.`\n      );\n    });\n\n    invariant(\n      'value' in _snapPoints || _snapPoints.length > 0 || enableDynamicSizing,\n      `'snapPoints' was provided with no points! please provide at least one snap point.`\n    );\n    //#endregion\n\n    //#region index\n    invariant(\n      typeof index === 'number' || typeof index === 'undefined',\n      `'index' was provided but with wrong type ! expected type is a number.`\n    );\n\n    invariant(\n      enableDynamicSizing ||\n        (typeof index === 'number'\n          ? index >= -1 && index <= _snapPoints.length - 1\n          : true),\n      `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n        _snapPoints.length - 1\n      }`\n    );\n    //#endregion\n\n    //#region insets\n    invariant(\n      typeof topInset === 'number' || typeof topInset === 'undefined',\n      `'topInset' was provided but with wrong type ! expected type is a number.`\n    );\n    invariant(\n      typeof bottomInset === 'number' || typeof bottomInset === 'undefined',\n      `'bottomInset' was provided but with wrong type ! expected type is a number.`\n    );\n    //#endregion\n\n    // animations\n  }, [index, snapPoints, topInset, bottomInset, enableDynamicSizing]);\n};\n"]}