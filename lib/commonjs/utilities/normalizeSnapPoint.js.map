{"version":3,"sources":["normalizeSnapPoint.ts"],"names":["normalizeSnapPoint","snapPoint","containerHeight","normalizedSnapPoint","Number","split","Math","max"],"mappings":";;;;;;;AAAA;AACA;AACA;AACO,MAAMA,kBAAkB,GAAG,CAChCC,SADgC,EAEhCC,eAFgC,KAG7B;AACH;;AACA,MAAIC,mBAAmB,GAAGF,SAA1B,CAFG,CAIH;;AACA,MAAI,OAAOE,mBAAP,KAA+B,QAAnC,EAA6C;AAC3CA,IAAAA,mBAAmB,GAChBC,MAAM,CAACD,mBAAmB,CAACE,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAD,CAAN,GAA4CH,eAA7C,GAAgE,GADlE;AAED;;AACD,SAAOI,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYL,eAAe,GAAGC,mBAA9B,CAAP;AACD,CAbM","sourcesContent":["/**\n * Converts a snap point to fixed numbers.\n */\nexport const normalizeSnapPoint = (\n  snapPoint: number | string,\n  containerHeight: number\n) => {\n  'worklet';\n  let normalizedSnapPoint = snapPoint;\n\n  // percentage snap point\n  if (typeof normalizedSnapPoint === 'string') {\n    normalizedSnapPoint =\n      (Number(normalizedSnapPoint.split('%')[0]) * containerHeight) / 100;\n  }\n  return Math.max(0, containerHeight - normalizedSnapPoint);\n};\n"]}