{"version":3,"sources":["BottomSheet.tsx"],"names":["Animated","addWhitelistedUIProps","decelerationRate","BottomSheetComponent","BottomSheet","props","ref","animationConfigs","_providedAnimationConfigs","index","_providedIndex","snapPoints","_providedSnapPoints","animateOnMount","DEFAULT_ANIMATE_ON_MOUNT","enableContentPanningGesture","DEFAULT_ENABLE_CONTENT_PANNING_GESTURE","enableHandlePanningGesture","DEFAULT_ENABLE_HANDLE_PANNING_GESTURE","enableOverDrag","DEFAULT_ENABLE_OVER_DRAG","enablePanDownToClose","DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE","enableDynamicSizing","DEFAULT_DYNAMIC_SIZING","overDragResistanceFactor","DEFAULT_OVER_DRAG_RESISTANCE_FACTOR","style","_providedStyle","containerStyle","_providedContainerStyle","backgroundStyle","_providedBackgroundStyle","handleStyle","_providedHandleStyle","handleIndicatorStyle","_providedHandleIndicatorStyle","gestureEventsHandlersHook","keyboardBehavior","DEFAULT_KEYBOARD_BEHAVIOR","keyboardBlurBehavior","DEFAULT_KEYBOARD_BLUR_BEHAVIOR","android_keyboardInputMode","DEFAULT_KEYBOARD_INPUT_MODE","handleHeight","_providedHandleHeight","containerHeight","_providedContainerHeight","contentHeight","_providedContentHeight","containerOffset","_providedContainerOffset","topInset","bottomInset","maxDynamicContentSize","animatedPosition","_providedAnimatedPosition","animatedIndex","_providedAnimatedIndex","simultaneousHandlers","_providedSimultaneousHandlers","waitFor","_providedWaitFor","activeOffsetX","_providedActiveOffsetX","activeOffsetY","_providedActiveOffsetY","failOffsetX","_providedFailOffsetX","failOffsetY","_providedFailOffsetY","onChange","_providedOnChange","onClose","_providedOnClose","onAnimate","_providedOnAnimate","$modal","detached","handleComponent","backdropComponent","backgroundComponent","footerComponent","children","Content","_animatedContainerHeight","INITIAL_CONTAINER_HEIGHT","animatedContainerHeight","verticalInset","value","animatedContainerOffset","INITIAL_CONTAINER_OFFSET","animatedHandleHeight","INITIAL_HANDLE_HEIGHT","animatedFooterHeight","animatedContentHeight","animatedSnapPoints","animatedHighestSnapPoint","length","animatedClosedPosition","closedPosition","animatedSheetHeight","animatedCurrentIndex","INITIAL_POSITION","animatedNextPosition","INITIAL_VALUE","animatedNextPositionIndex","isAnimatedOnMount","isContentHeightFixed","isLayoutCalculated","isContainerHeightCalculated","undefined","isHandleHeightCalculated","isSnapPointsNormalized","INITIAL_SNAP_POINT","isInTemporaryPosition","isForcedClosing","animatedContentGestureState","State","UNDETERMINED","animatedHandleGestureState","animatedScrollableType","animatedScrollableContentOffsetY","animatedScrollableOverrideState","isScrollableRefreshable","setScrollableRef","removeScrollableRef","state","animatedKeyboardState","height","animatedKeyboardHeight","animationDuration","keyboardAnimationDuration","animationEasing","keyboardAnimationEasing","shouldHandleKeyboardEvents","animatedKeyboardHeightInContainer","animatedAnimationState","ANIMATION_STATE","animatedAnimationSource","ANIMATION_SOURCE","MOUNT","animatedSheetState","SHEET_STATE","CLOSED","extendedPosition","EXTENDED","keyboardHeightInContainer","extendedPositionWithKeyboard","Math","max","KEYBOARD_BEHAVIOR","interactive","FILL_PARENT","OVER_EXTENDED","OPENED","animatedScrollableState","SCROLLABLE_STATE","UNLOCKED","KEYBOARD_STATE","SHOWN","RUNNING","LOCKED","animatedContentHeightMax","extend","fillParent","contentWithKeyboardHeight","adjustedSnapPoints","slice","reverse","adjustedSnapPointsIndexes","map","_","push","currentIndex","Extrapolate","CLAMP","KEYBOARD_INPUT_MODE","adjustResize","KEYBOARD","SNAP_POINT_CHANGE","getNextPosition","keyboardState","highestSnapPoint","KEYBOARD_BLUR_BEHAVIOR","restore","HIDDEN","ACTIVE","nextPosition","handleOnChange","component","name","method","params","handleOnAnimate","toPoint","toIndex","indexOf","fromIndex","stopAnimation","NONE","STOPPED","animateToPositionCompleted","isFinished","print","animateToPosition","position","source","velocity","configs","currentPosition","point","onComplete","handleSnapToIndex","USER","handleSnapToPosition","handleClose","handleForceClose","handleExpand","handleCollapse","snapToIndex","snapToPosition","expand","collapse","close","forceClose","internalContextVariables","externalContextVariables","containerAnimatedStyle","opacity","Platform","OS","transform","translateY","styles","container","contentContainerAnimatedStyle","contentContainerStyle","contentContainer","contentMaskContainerAnimatedStyle","overflow","paddingBottom","contentMaskContainerStyle","contentMaskContainer","_isLayoutCalculated","result","_previousResult","_previousSnapPoints","_previousContainerHeight","animationConfig","animationSource","CONTAINER_RESIZE","duration","JSON","stringify","_keyboardState","_keyboardHeight","_previousKeyboardState","_previousKeyboardHeight","abs","bottom","hasActiveGesture","BEGAN","none","keyboardHeight","_animatedPosition","_animatedIndex","_animationState","_contentGestureState","_handleGestureState","hasNoActiveGesture","END","CANCELLED","providedIndex","displayName"],"mappings":";;;;;;;AAAA;;AAQA;;AACA;;AACA;;AAcA;;AACA;;AAOA;;AAIA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAUA;;AAMA;;AAoBA;;;;;;;;AArCA;AAuCAA,+BAASC,qBAAT,CAA+B;AAC7BC,EAAAA,gBAAgB,EAAE;AADW,CAA/B;;AAMA,MAAMC,oBAAoB,gBAAG,uBAC3B,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,EAAiC;AAC/B;AACA,gCAAkBD,KAAlB,EAF+B,CAG/B;AAEA;;AACA,QAAM;AACJ;AACAE,IAAAA,gBAAgB,EAAEC,yBAFd;AAIJ;AACAC,IAAAA,KAAK,EAAEC,cAAc,GAAG,CALpB;AAMJC,IAAAA,UAAU,EAAEC,mBANR;AAOJC,IAAAA,cAAc,GAAGC,oCAPb;AAQJC,IAAAA,2BAA2B,GAAGC,kDAR1B;AASJC,IAAAA,0BAA0B,GAAGC,iDATzB;AAUJC,IAAAA,cAAc,GAAGC,oCAVb;AAWJC,IAAAA,oBAAoB,GAAGC,4CAXnB;AAYJC,IAAAA,mBAAmB,GAAGC,kCAZlB;AAaJC,IAAAA,wBAAwB,GAAGC,+CAbvB;AAeJ;AACAC,IAAAA,KAAK,EAAEC,cAhBH;AAiBJC,IAAAA,cAAc,EAAEC,uBAjBZ;AAkBJC,IAAAA,eAAe,EAAEC,wBAlBb;AAmBJC,IAAAA,WAAW,EAAEC,oBAnBT;AAoBJC,IAAAA,oBAAoB,EAAEC,6BApBlB;AAsBJ;AACAC,IAAAA,yBAvBI;AAyBJ;AACAC,IAAAA,gBAAgB,GAAGC,qCA1Bf;AA2BJC,IAAAA,oBAAoB,GAAGC,0CA3BnB;AA4BJC,IAAAA,yBAAyB,GAAGC,uCA5BxB;AA8BJ;AACAC,IAAAA,YAAY,EAAEC,qBA/BV;AAgCJC,IAAAA,eAAe,EAAEC,wBAhCb;AAiCJC,IAAAA,aAAa,EAAEC,sBAjCX;AAkCJC,IAAAA,eAAe,EAAEC,wBAlCb;AAmCJC,IAAAA,QAAQ,GAAG,CAnCP;AAoCJC,IAAAA,WAAW,GAAG,CApCV;AAqCJC,IAAAA,qBArCI;AAuCJ;AACAC,IAAAA,gBAAgB,EAAEC,yBAxCd;AAyCJC,IAAAA,aAAa,EAAEC,sBAzCX;AA2CJ;AACAC,IAAAA,oBAAoB,EAAEC,6BA5ClB;AA6CJC,IAAAA,OAAO,EAAEC,gBA7CL;AA8CJC,IAAAA,aAAa,EAAEC,sBA9CX;AA+CJC,IAAAA,aAAa,EAAEC,sBA/CX;AAgDJC,IAAAA,WAAW,EAAEC,oBAhDT;AAiDJC,IAAAA,WAAW,EAAEC,oBAjDT;AAmDJ;AACAC,IAAAA,QAAQ,EAAEC,iBApDN;AAqDJC,IAAAA,OAAO,EAAEC,gBArDL;AAsDJC,IAAAA,SAAS,EAAEC,kBAtDP;AAwDJ;AACAC,IAAAA,MAAM,GAAG,KAzDL;AA0DJC,IAAAA,QAAQ,GAAG,KA1DP;AA4DJ;AACAC,IAAAA,eA7DI;AA8DJC,IAAAA,iBA9DI;AA+DJC,IAAAA,mBA/DI;AAgEJC,IAAAA,eAhEI;AAiEJC,IAAAA,QAAQ,EAAEC;AAjEN,MAkEF/E,KAlEJ,CAN+B,CAyE/B;AAEA;;AACA;AACJ;AACA;AACA;;AACI,QAAMgF,wBAAwB,GAAG,mCAC/BtC,wBAD+B,aAC/BA,wBAD+B,cAC/BA,wBAD+B,GACHuC,oCADG,CAAjC;AAGA;AACJ;AACA;AACA;AACA;;;AACI,QAAMC,uBAAuB,GAAG,4CAAgB,MAAM;AACpD,UAAMC,aAAa,GAAGpC,QAAQ,GAAGC,WAAjC;AACA,WAAOwB,MAAM,GACTQ,wBAAwB,CAACI,KAAzB,GAAiCD,aADxB,GAETH,wBAAwB,CAACI,KAF7B;AAGD,GAL+B,EAK7B,CAACZ,MAAD,EAASzB,QAAT,EAAmBC,WAAnB,CAL6B,CAAhC;AAMA,QAAMqC,uBAAuB,GAAG,mCAC9BvC,wBAD8B,aAC9BA,wBAD8B,cAC9BA,wBAD8B,GACFwC,oCADE,CAAhC;AAGA,QAAMC,oBAAoB,GAAG,mCAC3B/C,qBAD2B,aAC3BA,qBAD2B,cAC3BA,qBAD2B,GACFgD,iCADE,CAA7B;AAGA,QAAMC,oBAAoB,GAAG,2CAAe,CAAf,CAA7B;AACA,QAAMC,qBAAqB,GAAG,2CAAeT,oCAAf,CAA9B;AACA,QAAMU,kBAAkB,GAAG,oCACzBpF,mBADyB,EAEzB2E,uBAFyB,EAGzBQ,qBAHyB,EAIzBH,oBAJyB,EAKzBrE,mBALyB,EAMzB+B,qBANyB,CAA3B;AAQA,QAAM2C,wBAAwB,GAAG,4CAC/B,MAAMD,kBAAkB,CAACP,KAAnB,CAAyBO,kBAAkB,CAACP,KAAnB,CAAyBS,MAAzB,GAAkC,CAA3D,CADyB,CAAjC;AAGA,QAAMC,sBAAsB,GAAG,4CAAgB,MAAM;AACnD,QAAIC,cAAc,GAAGb,uBAAuB,CAACE,KAA7C;;AAEA,QAAIZ,MAAM,IAAIC,QAAd,EAAwB;AACtBsB,MAAAA,cAAc,GAAGb,uBAAuB,CAACE,KAAxB,GAAgCpC,WAAjD;AACD;;AAED,WAAO+C,cAAP;AACD,GAR8B,EAQ5B,CAACvB,MAAD,EAASC,QAAT,EAAmBzB,WAAnB,CAR4B,CAA/B;AASA,QAAMgD,mBAAmB,GAAG,4CAC1B,MAAMd,uBAAuB,CAACE,KAAxB,GAAgCQ,wBAAwB,CAACR,KADrC,CAA5B;AAGA,QAAMa,oBAAoB,GAAG,mCAC3BzF,cAAc,GAAG,CAAC,CAAJ,GAAQH,cADK,CAA7B;AAGA,QAAM6C,gBAAgB,GAAG,2CAAegD,4BAAf,CAAzB;AACA,QAAMC,oBAAoB,GAAG,2CAAeC,yBAAf,CAA7B;AACA,QAAMC,yBAAyB,GAAG,2CAAe,CAAf,CAAlC,CAlI+B,CAoI/B;;AACA,QAAMC,iBAAiB,GAAG,2CAAe,KAAf,CAA1B;AACA,QAAMC,oBAAoB,GAAG,2CAAe,KAAf,CAA7B;AACA,QAAMC,kBAAkB,GAAG,4CAAgB,MAAM;AAC/C,QAAIC,2BAA2B,GAAG,KAAlC,CAD+C,CAE/C;;AACA,QACE/D,wBAAwB,KAAK,IAA7B,IACAA,wBAAwB,KAAKgE,SAF/B,EAGE;AACAD,MAAAA,2BAA2B,GAAG,IAA9B;AACD,KAR8C,CAS/C;;;AACA,QAAIvB,uBAAuB,CAACE,KAAxB,KAAkCH,oCAAtC,EAAgE;AAC9DwB,MAAAA,2BAA2B,GAAG,IAA9B;AACD;;AAED,QAAIE,wBAAwB,GAAG,KAA/B,CAd+C,CAe/C;;AACA,QACEnE,qBAAqB,KAAK,IAA1B,IACAA,qBAAqB,KAAKkE,SAD1B,IAEA,OAAOlE,qBAAP,KAAiC,QAHnC,EAIE;AACAmE,MAAAA,wBAAwB,GAAG,IAA3B;AACD,KAtB8C,CAuB/C;;;AACA,QAAIjC,eAAe,KAAK,IAAxB,EAA8B;AAC5Ba,MAAAA,oBAAoB,CAACH,KAArB,GAA6B,CAA7B;AACAuB,MAAAA,wBAAwB,GAAG,IAA3B;AACD,KA3B8C,CA4B/C;;;AACA,QAAIpB,oBAAoB,CAACH,KAArB,KAA+BI,iCAAnC,EAA0D;AACxDmB,MAAAA,wBAAwB,GAAG,IAA3B;AACD;;AAED,QAAIC,sBAAsB,GAAG,KAA7B,CAjC+C,CAkC/C;;AACA,QAAIjB,kBAAkB,CAACP,KAAnB,CAAyB,CAAzB,MAAgCyB,8BAApC,EAAwD;AACtDD,MAAAA,sBAAsB,GAAG,IAAzB;AACD;;AAED,WACEH,2BAA2B,IAC3BE,wBADA,IAEAC,sBAHF;AAKD,GA5C0B,CAA3B;AA6CA,QAAME,qBAAqB,GAAG,2CAAe,KAAf,CAA9B;AACA,QAAMC,eAAe,GAAG,2CAAe,KAAf,CAAxB,CArL+B,CAuL/B;;AACA,QAAMC,2BAA2B,GAAG,2CAClCC,iCAAMC,YAD4B,CAApC;AAGA,QAAMC,0BAA0B,GAAG,2CACjCF,iCAAMC,YAD2B,CAAnC,CA3L+B,CA8L/B;AAEA;AACA;;AACA,QAAM;AACJE,IAAAA,sBADI;AAEJC,IAAAA,gCAFI;AAGJC,IAAAA,+BAHI;AAIJC,IAAAA,uBAJI;AAKJC,IAAAA,gBALI;AAMJC,IAAAA;AANI,MAOF,2BAPJ,CAlM+B,CA0M/B;;AACA,QAAM;AACJC,IAAAA,KAAK,EAAEC,qBADH;AAEJC,IAAAA,MAAM,EAAEC,sBAFJ;AAGJC,IAAAA,iBAAiB,EAAEC,yBAHf;AAIJC,IAAAA,eAAe,EAAEC,uBAJb;AAKJC,IAAAA;AALI,MAMF,yBANJ;AAOA,QAAMC,iCAAiC,GAAG,2CAAe,CAAf,CAA1C,CAlN+B,CAmN/B;AAEA;AACA;;AACA,QAAMC,sBAAsB,GAAG,2CAAeC,2BAAgBnB,YAA/B,CAA/B;AACA,QAAMoB,uBAAuB,GAAG,2CAC9BC,4BAAiBC,KADa,CAAhC;AAGA,QAAMC,kBAAkB,GAAG,4CAAgB,MAAM;AAC/C;AACA,QAAIvF,gBAAgB,CAACkC,KAAjB,IAA0BU,sBAAsB,CAACV,KAArD,EACE,OAAOsD,uBAAYC,MAAnB,CAH6C,CAK/C;;AACA,UAAMC,gBAAgB,GACpB1D,uBAAuB,CAACE,KAAxB,GAAgCY,mBAAmB,CAACZ,KADtD;AAEA,QAAIlC,gBAAgB,CAACkC,KAAjB,KAA2BwD,gBAA/B,EACE,OAAOF,uBAAYG,QAAnB,CAT6C,CAW/C;AACA;;AACA,UAAMC,yBAAyB,GAAGX,iCAAiC,CAAC/C,KAApE;AACA,UAAM2D,4BAA4B,GAAGC,IAAI,CAACC,GAAL,CACnC,CADmC,EAEnC/D,uBAAuB,CAACE,KAAxB,IACGY,mBAAmB,CAACZ,KAApB,GAA4B0D,yBAD/B,CAFmC,CAArC,CAd+C,CAoB/C;;AACA,QACE7G,gBAAgB,KAAKiH,6BAAkBC,WAAvC,IACArC,qBAAqB,CAAC1B,KADtB,IAEAlC,gBAAgB,CAACkC,KAAjB,KAA2B2D,4BAH7B,EAIE;AACA,aAAOL,uBAAYG,QAAnB;AACD,KA3B8C,CA6B/C;;;AACA,QAAI3F,gBAAgB,CAACkC,KAAjB,KAA2B,CAA/B,EAAkC;AAChC,aAAOsD,uBAAYU,WAAnB;AACD,KAhC8C,CAkC/C;;;AACA,QAAIlG,gBAAgB,CAACkC,KAAjB,GAAyBwD,gBAA7B,EAA+C;AAC7C,aAAOF,uBAAYW,aAAnB;AACD;;AAED,WAAOX,uBAAYY,MAAnB;AACD,GAxC0B,EAwCxB,CACDxD,sBADC,EAEDZ,uBAFC,EAGDiD,iCAHC,EAIDjF,gBAJC,EAKD8C,mBALC,EAMDc,qBANC,EAOD7E,gBAPC,CAxCwB,CAA3B;AAiDA,QAAMsH,uBAAuB,GAAG,4CAAgB,MAAM;AACpD;AACN;AACA;AACM,QACEjC,+BAA+B,CAAClC,KAAhC,KAA0CoE,4BAAiBtC,YAD7D,EAEE;AACA,aAAOI,+BAA+B,CAAClC,KAAvC;AACD;AACD;AACN;AACA;;;AACM,QAAIqD,kBAAkB,CAACrD,KAAnB,KAA6BsD,uBAAYU,WAA7C,EAA0D;AACxD,aAAOI,4BAAiBC,QAAxB;AACD;AAED;AACN;AACA;;;AACM,QAAIhB,kBAAkB,CAACrD,KAAnB,KAA6BsD,uBAAYG,QAA7C,EAAuD;AACrD,aAAOW,4BAAiBC,QAAxB;AACD;AAED;AACN;AACA;AACA;AACA;;;AACM,QACE9B,qBAAqB,CAACvC,KAAtB,KAAgCsE,0BAAeC,KAA/C,IACAvB,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAFnD,EAGE;AACA,aAAOJ,4BAAiBC,QAAxB;AACD;;AAED,WAAOD,4BAAiBK,MAAxB;AACD,GApC+B,CAAhC,CA5Q+B,CAiT/B;;AACA,QAAMC,wBAAwB,GAAG,4CAAgB,MAAM;AACrD,UAAMhB,yBAAyB,GAAGX,iCAAiC,CAAC/C,KAApE;AACA,UAAM7C,YAAY,GAAGyG,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY1D,oBAAoB,CAACH,KAAjC,CAArB;AACA,QAAIzC,aAAa,GAAGqD,mBAAmB,CAACZ,KAApB,GAA4B7C,YAAhD;;AAEA,QACEN,gBAAgB,KAAKiH,6BAAkBa,MAAvC,IACApC,qBAAqB,CAACvC,KAAtB,KAAgCsE,0BAAeC,KAFjD,EAGE;AACAhH,MAAAA,aAAa,GAAGA,aAAa,GAAGmG,yBAAhC;AACD,KALD,MAKO,IACL7G,gBAAgB,KAAKiH,6BAAkBc,UAAvC,IACAlD,qBAAqB,CAAC1B,KAFjB,EAGL;AACA,UAAIuC,qBAAqB,CAACvC,KAAtB,KAAgCsE,0BAAeC,KAAnD,EAA0D;AACxDhH,QAAAA,aAAa,GACXuC,uBAAuB,CAACE,KAAxB,GACA7C,YADA,GAEAuG,yBAHF;AAID,OALD,MAKO;AACLnG,QAAAA,aAAa,GAAGuC,uBAAuB,CAACE,KAAxB,GAAgC7C,YAAhD;AACD;AACF,KAZM,MAYA,IACLN,gBAAgB,KAAKiH,6BAAkBC,WAAvC,IACArC,qBAAqB,CAAC1B,KAFjB,EAGL;AACA,YAAM6E,yBAAyB,GAC7BtH,aAAa,GAAGmG,yBADlB;;AAGA,UAAInB,qBAAqB,CAACvC,KAAtB,KAAgCsE,0BAAeC,KAAnD,EAA0D;AACxD,YACEb,yBAAyB,GAAG9C,mBAAmB,CAACZ,KAAhD,GACAF,uBAAuB,CAACE,KAF1B,EAGE;AACAzC,UAAAA,aAAa,GACXuC,uBAAuB,CAACE,KAAxB,GACA0D,yBADA,GAEAvG,YAHF;AAID;AACF,OAVD,MAUO,IACL0H,yBAAyB,GAAG1H,YAA5B,GACA2C,uBAAuB,CAACE,KAFnB,EAGL;AACAzC,QAAAA,aAAa,GAAGuC,uBAAuB,CAACE,KAAxB,GAAgC7C,YAAhD;AACD,OALM,MAKA;AACLI,QAAAA,aAAa,GAAGsH,yBAAhB;AACD;AACF;AAED;AACN;AACA;AACA;AACA;AACA;;;AACM,WAAOjB,IAAI,CAACC,GAAL,CAAStG,aAAT,EAAwB,CAAxB,CAAP;AACD,GAxDgC,EAwD9B,CACDuC,uBADC,EAEDK,oBAFC,EAGD4C,iCAHC,EAIDR,qBAJC,EAKD3B,mBALC,EAMDc,qBANC,EAOD7E,gBAPC,CAxD8B,CAAjC;AAiEA,QAAMmB,aAAa,GAAG,4CAAgB,MAAM;AAC1C,UAAM8G,kBAAkB,GAAGvE,kBAAkB,CAACP,KAAnB,CAAyB+E,KAAzB,GAAiCC,OAAjC,EAA3B;AACA,UAAMC,yBAAyB,GAAG1E,kBAAkB,CAACP,KAAnB,CAC/B+E,KAD+B,GAE/BG,GAF+B,CAE3B,CAACC,CAAD,EAASnK,KAAT,KAA2BA,KAFA,EAG/BgK,OAH+B,EAAlC;AAKA;AACN;AACA;;AACMF,IAAAA,kBAAkB,CAACM,IAAnB,CAAwBtF,uBAAuB,CAACE,KAAhD;AACAiF,IAAAA,yBAAyB,CAACG,IAA1B,CAA+B,CAAC,CAAhC;AAEA,UAAMC,YAAY,GAAGjE,kBAAkB,CAACpB,KAAnB,GACjB,wCACElC,gBAAgB,CAACkC,KADnB,EAEE8E,kBAFF,EAGEG,yBAHF,EAIEK,mCAAYC,KAJd,CADiB,GAOjB,CAAC,CAPL;AASA;AACN;AACA;AACA;;AACM,QACEtI,yBAAyB,KAAKuI,+BAAoBC,YAAlD,IACAvC,uBAAuB,CAAClD,KAAxB,KAAkCmD,4BAAiBuC,QADnD,IAEA1C,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAFjD,IAGA9C,qBAAqB,CAAC1B,KAJxB,EAKE;AACA,aAAO4D,IAAI,CAACC,GAAL,CAAShD,oBAAoB,CAACb,KAA9B,EAAqCqF,YAArC,CAAP;AACD;AAED;AACN;AACA;AACA;;;AACM,QACEnC,uBAAuB,CAAClD,KAAxB,KAAkCmD,4BAAiBwC,iBAAnD,IACA3C,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAFnD,EAGE;AACA,aAAOvD,yBAAyB,CAACjB,KAAjC;AACD;;AAED,WAAOqF,YAAP;AACD,GA/CqB,EA+CnB,CAACpI,yBAAD,CA/CmB,CAAtB,CAnX+B,CAma/B;AAEA;;AACA;AACJ;AACA;;AACI,QAAM2I,eAAe,GAAG,+CACtB,SAASA,eAAT,GAA2B;AACzB;;AACA,UAAMP,YAAY,GAAGxE,oBAAoB,CAACb,KAA1C;AACA,UAAM9E,UAAU,GAAGqF,kBAAkB,CAACP,KAAtC;AACA,UAAM6F,aAAa,GAAGtD,qBAAqB,CAACvC,KAA5C;AACA,UAAM8F,gBAAgB,GAAGtF,wBAAwB,CAACR,KAAlD;AAEA;AACR;AACA;;AACQ,QACEjD,oBAAoB,KAAKgJ,kCAAuBC,OAAhD,IACAH,aAAa,KAAKvB,0BAAe2B,MADjC,IAEArE,2BAA2B,CAAC5B,KAA5B,KAAsC6B,iCAAMqE,MAF5C,IAGAnE,0BAA0B,CAAC/B,KAA3B,KAAqC6B,iCAAMqE,MAJ7C,EAKE;AACAxE,MAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AACA,YAAMmG,YAAY,GAAGjL,UAAU,CAACmK,YAAD,CAA/B;AACA,aAAOc,YAAP;AACD;AAED;AACR;AACA;;;AACQ,QACEtJ,gBAAgB,KAAKiH,6BAAkBa,MAAvC,IACAkB,aAAa,KAAKvB,0BAAeC,KAFnC,EAGE;AACA,aAAOuB,gBAAP;AACD;AAED;AACR;AACA;;;AACQ,QACEjJ,gBAAgB,KAAKiH,6BAAkBc,UAAvC,IACAiB,aAAa,KAAKvB,0BAAeC,KAFnC,EAGE;AACA7C,MAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,IAA9B;AACA,aAAO,CAAP;AACD;AAED;AACR;AACA;;;AACQ,QACEnD,gBAAgB,KAAKiH,6BAAkBC,WAAvC,IACA8B,aAAa,KAAKvB,0BAAeC,KAFnC,EAGE;AACA7C,MAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,IAA9B;AACA,YAAM0D,yBAAyB,GAC7BX,iCAAiC,CAAC/C,KADpC;AAEA,aAAO4D,IAAI,CAACC,GAAL,CAAS,CAAT,EAAYiC,gBAAgB,GAAGpC,yBAA/B,CAAP;AACD;;AAED,QAAIhC,qBAAqB,CAAC1B,KAA1B,EAAiC;AAC/B,aAAOlC,gBAAgB,CAACkC,KAAxB;AACD;;AAED,WAAO9E,UAAU,CAACmK,YAAD,CAAjB;AACD,GA7DqB,EA8DtB,CACEzD,2BADF,EAEEf,oBAFF,EAGEkB,0BAHF,EAIEvB,wBAJF,EAKEuC,iCALF,EAMER,qBANF,EAOEzE,gBAPF,EAQEyC,kBARF,EASEmB,qBATF,EAUE7E,gBAVF,EAWEE,oBAXF,CA9DsB,CAAxB;AA4EA,QAAMqJ,cAAc,GAAG,wBACrB,SAASA,cAAT,CAAwBpL,KAAxB,EAAuC;AACrC,0BAAM;AACJqL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEH,cAAc,CAACE,IAFnB;AAGJE,MAAAA,MAAM,EAAE;AACNxL,QAAAA,KADM;AAEN6F,QAAAA,oBAAoB,EAAEA,oBAAoB,CAACb;AAFrC;AAHJ,KAAN;;AASA,QAAIjB,iBAAJ,EAAuB;AACrBA,MAAAA,iBAAiB,CAAC/D,KAAD,CAAjB;AACD;AACF,GAdoB,EAerB,CAAC+D,iBAAD,EAAoB8B,oBAApB,CAfqB,CAAvB;AAiBA,QAAM4F,eAAe,GAAG,wBACtB,SAASA,eAAT,CAAyBC,OAAzB,EAA0C;AACxC,UAAMxL,UAAU,GAAGqF,kBAAkB,CAACP,KAAtC;AACA,UAAM2G,OAAO,GAAGzL,UAAU,CAAC0L,OAAX,CAAmBF,OAAnB,CAAhB;AAEA,0BAAM;AACJL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEE,eAAe,CAACH,IAFpB;AAGJE,MAAAA,MAAM,EAAE;AACNG,QAAAA,OADM;AAENE,QAAAA,SAAS,EAAEhG,oBAAoB,CAACb;AAF1B;AAHJ,KAAN;;AASA,QAAI,CAACb,kBAAL,EAAyB;AACvB;AACD;;AAED,QAAIwH,OAAO,KAAK9F,oBAAoB,CAACb,KAArC,EAA4C;AAC1Cb,MAAAA,kBAAkB,CAAC0B,oBAAoB,CAACb,KAAtB,EAA6B2G,OAA7B,CAAlB;AACD;AACF,GArBqB,EAsBtB,CAACxH,kBAAD,EAAqBoB,kBAArB,EAAyCM,oBAAzC,CAtBsB,CAAxB,CAtgB+B,CA8hB/B;AAEA;;AACA,QAAMiG,aAAa,GAAG,+CAAmB,MAAM;AAC7C,gDAAgBhJ,gBAAhB;AACA6D,IAAAA,eAAe,CAAC3B,KAAhB,GAAwB,KAAxB;AACAkD,IAAAA,uBAAuB,CAAClD,KAAxB,GAAgCmD,4BAAiB4D,IAAjD;AACA/D,IAAAA,sBAAsB,CAAChD,KAAvB,GAA+BiD,2BAAgB+D,OAA/C;AACD,GALqB,EAKnB,CAAClJ,gBAAD,EAAmBkF,sBAAnB,EAA2CE,uBAA3C,CALmB,CAAtB;AAMA,QAAM+D,0BAA0B,GAAG,+CACjC,SAASA,0BAAT,CAAoCC,UAApC,EAA0D;AACxDvF,IAAAA,eAAe,CAAC3B,KAAhB,GAAwB,KAAxB;;AAEA,QAAI,CAACkH,UAAL,EAAiB;AACf;AACD;;AACD,wCAAQC,gBAAR,EAAe;AACbd,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,MAAAA,MAAM,EAAEU,0BAA0B,CAACX,IAFtB;AAGbE,MAAAA,MAAM,EAAE;AACN3F,QAAAA,oBAAoB,EAAEA,oBAAoB,CAACb,KADrC;AAENe,QAAAA,oBAAoB,EAAEA,oBAAoB,CAACf,KAFrC;AAGNiB,QAAAA,yBAAyB,EAAEA,yBAAyB,CAACjB;AAH/C;AAHK,KAAf;AAUAkD,IAAAA,uBAAuB,CAAClD,KAAxB,GAAgCmD,4BAAiB4D,IAAjD;AACA/D,IAAAA,sBAAsB,CAAChD,KAAvB,GAA+BiD,2BAAgB+D,OAA/C;AACAjG,IAAAA,oBAAoB,CAACf,KAArB,GAA6BgB,yBAA7B;AACAC,IAAAA,yBAAyB,CAACjB,KAA1B,GAAkCgB,yBAAlC;AACD,GArBgC,CAAnC;AAuBA,QAAMoG,iBAAwC,GAAG,+CAC/C,SAASA,iBAAT,CACEC,QADF,EAEEC,MAFF,EAGEC,QAAgB,GAAG,CAHrB,EAIEC,OAJF,EAKE;AACA,QACEH,QAAQ,KAAKvJ,gBAAgB,CAACkC,KAA9B,IACAqH,QAAQ,KAAK/F,SADb,IAEC0B,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAAjD,IACC6C,QAAQ,KAAKtG,oBAAoB,CAACf,KAJtC,EAKE;AACA;AACD;;AAED,wCAAQmH,gBAAR,EAAe;AACbd,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,MAAAA,MAAM,EAAEa,iBAAiB,CAACd,IAFb;AAGbE,MAAAA,MAAM,EAAE;AACNiB,QAAAA,eAAe,EAAE3J,gBAAgB,CAACkC,KAD5B;AAENqH,QAAAA,QAFM;AAGNE,QAAAA,QAHM;AAINzH,QAAAA,uBAAuB,EAAEA,uBAAuB,CAACE;AAJ3C;AAHK,KAAf;AAWA8G,IAAAA,aAAa;AAEb;AACR;AACA;;AACQ9D,IAAAA,sBAAsB,CAAChD,KAAvB,GAA+BiD,2BAAgBuB,OAA/C;AACAtB,IAAAA,uBAAuB,CAAClD,KAAxB,GAAgCsH,MAAhC;AAEA;AACR;AACA;;AACQvG,IAAAA,oBAAoB,CAACf,KAArB,GAA6BqH,QAA7B;AACApG,IAAAA,yBAAyB,CAACjB,KAA1B,GACEO,kBAAkB,CAACP,KAAnB,CAAyB4G,OAAzB,CAAiCS,QAAjC,CADF;AAGA;AACR;AACA;;AACQ,wCAAQZ,eAAR,EAAyBY,QAAzB;AAEA;AACR;AACA;;AACQ,QAAIG,OAAO,KAAKlG,SAAhB,EAA2B;AACzBxD,MAAAA,gBAAgB,CAACkC,KAAjB,GAAyB,wBAAQ;AAC/B0H,QAAAA,KAAK,EAAEL,QADwB;AAE/BG,QAAAA,OAF+B;AAG/BD,QAAAA,QAH+B;AAI/BI,QAAAA,UAAU,EAAEV;AAJmB,OAAR,CAAzB;AAMD,KAPD,MAOO;AACL;AACV;AACA;AACUnJ,MAAAA,gBAAgB,CAACkC,KAAjB,GAAyB,wBAAQ;AAC/B0H,QAAAA,KAAK,EAAEL,QADwB;AAE/BE,QAAAA,QAF+B;AAG/BC,QAAAA,OAAO,EAAEzM,yBAHsB;AAI/B4M,QAAAA,UAAU,EAAEV;AAJmB,OAAR,CAAzB;AAMD;AACF,GApE8C,EAqE/C,CAACR,eAAD,EAAkB1L,yBAAlB,CArE+C,CAAjD,CA9jB+B,CAqoB/B;AAEA;;AACA,QAAM6M,iBAAiB,GAAG,wBACxB,SAASA,iBAAT,CACE5M,KADF,EAEEF,gBAFF,EAGE;AACA,UAAMI,UAAU,GAAGqF,kBAAkB,CAACP,KAAtC;AACA,4BACEhF,KAAK,IAAI,CAAC,CAAV,IAAeA,KAAK,IAAIE,UAAU,CAACuF,MAAX,GAAoB,CAD9C,EAEG,oGACCvF,UAAU,CAACuF,MAAX,GAAoB,CACrB,EAJH;AAMA,0BAAM;AACJ4F,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEqB,iBAAiB,CAACtB,IAFtB;AAGJE,MAAAA,MAAM,EAAE;AACNxL,QAAAA;AADM;AAHJ,KAAN;AAQA,UAAMmL,YAAY,GAAGjL,UAAU,CAACF,KAAD,CAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,QACE,CAACoG,kBAAkB,CAACpB,KAApB,IACAhF,KAAK,KAAKiG,yBAAyB,CAACjB,KADpC,IAEAmG,YAAY,KAAKpF,oBAAoB,CAACf,KAFtC,IAGA2B,eAAe,CAAC3B,KAJlB,EAKE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GAhDuB,EAiDxB,CACEsM,iBADF,EAEEhG,kBAFF,EAGEM,qBAHF,EAIEC,eAJF,EAKEpB,kBALF,EAMEQ,oBANF,EAOEE,yBAPF,CAjDwB,CAA1B;AA2DA,QAAM6G,oBAAoB,GAAG,+CAC3B,SAASA,oBAAT,CACET,QADF,EAEEvM,gBAFF,EAGE;AACA,0BAAM;AACJuL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEuB,oBAAoB,CAACxB,IAFzB;AAGJE,MAAAA,MAAM,EAAE;AACNa,QAAAA;AADM;AAHJ,KAAN;AAQA;AACR;AACA;;AACQ,UAAMlB,YAAY,GAAG,mCACnBkB,QADmB,EAEnBvH,uBAAuB,CAACE,KAFL,CAArB;AAKA;AACR;AACA;AACA;AACA;AACA;;AACQ,QACE,CAACoB,kBAAD,IACA+E,YAAY,KAAKpF,oBAAoB,CAACf,KADtC,IAEA2B,eAAe,CAAC3B,KAHlB,EAIE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,IAA9B;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GA9C0B,EA+C3B,CACEsM,iBADF,EAEExJ,WAFF,EAGED,QAHF,EAIEyD,kBAJF,EAKEO,eALF,EAME7B,uBANF,EAOEhC,gBAPF,CA/C2B,CAA7B;AAyDA,QAAMiK,WAAW,GAAG,wBAClB,SAASA,WAAT,CACEjN,gBADF,EAEE;AACA,0BAAM;AACJuL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEwB,WAAW,CAACzB;AAFhB,KAAN;AAKA,UAAMH,YAAY,GAAGzF,sBAAsB,CAACV,KAA5C;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,QACE,CAACoB,kBAAkB,CAACpB,KAApB,IACAmG,YAAY,KAAKpF,oBAAoB,CAACf,KADtC,IAEA2B,eAAe,CAAC3B,KAHlB,EAIE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GApCiB,EAqClB,CACEsM,iBADF,EAEEzF,eAFF,EAGEP,kBAHF,EAIEM,qBAJF,EAKEX,oBALF,EAMEL,sBANF,CArCkB,CAApB;AA8CA,QAAMsH,gBAAgB,GAAG,wBACvB,SAASA,gBAAT,CACElN,gBADF,EAEE;AACA,0BAAM;AACJuL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAEyB,gBAAgB,CAAC1B;AAFrB,KAAN;AAKA,UAAMH,YAAY,GAAGzF,sBAAsB,CAACV,KAA5C;AAEA;AACR;AACA;AACA;AACA;;AACQ,QACEmG,YAAY,KAAKpF,oBAAoB,CAACf,KAAtC,IACA2B,eAAe,CAAC3B,KAFlB,EAGE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AAEA;AACR;AACA;;AACQ2B,IAAAA,eAAe,CAAC3B,KAAhB,GAAwB,IAAxB;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GAvCsB,EAwCvB,CACEsM,iBADF,EAEEzF,eAFF,EAGED,qBAHF,EAIEX,oBAJF,EAKEL,sBALF,CAxCuB,CAAzB;AAgDA,QAAMuH,YAAY,GAAG,wBACnB,SAASA,YAAT,CACEnN,gBADF,EAEE;AACA,0BAAM;AACJuL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAE0B,YAAY,CAAC3B;AAFjB,KAAN;AAKA,UAAMpL,UAAU,GAAGqF,kBAAkB,CAACP,KAAtC;AACA,UAAMmG,YAAY,GAAGjL,UAAU,CAACA,UAAU,CAACuF,MAAX,GAAoB,CAArB,CAA/B;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,QACE,CAACW,kBAAkB,CAACpB,KAApB,IACA9E,UAAU,CAACuF,MAAX,GAAoB,CAApB,KAA0BQ,yBAAyB,CAACjB,KADpD,IAEAmG,YAAY,KAAKpF,oBAAoB,CAACf,KAFtC,IAGA2B,eAAe,CAAC3B,KAJlB,EAKE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GAtCkB,EAuCnB,CACEsM,iBADF,EAEE1F,qBAFF,EAGEN,kBAHF,EAIEO,eAJF,EAKEpB,kBALF,EAMEQ,oBANF,EAOEE,yBAPF,CAvCmB,CAArB;AAiDA,QAAMiH,cAAc,GAAG,wBACrB,SAASA,cAAT,CACEpN,gBADF,EAEE;AACA,0BAAM;AACJuL,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,MAAAA,MAAM,EAAE2B,cAAc,CAAC5B;AAFnB,KAAN;AAKA,UAAMH,YAAY,GAAG5F,kBAAkB,CAACP,KAAnB,CAAyB,CAAzB,CAArB;AAEA;AACR;AACA;AACA;AACA;AACA;;AACQ,QACE,CAACoB,kBAAD,IACAH,yBAAyB,CAACjB,KAA1B,KAAoC,CADpC,IAEAmG,YAAY,KAAKpF,oBAAoB,CAACf,KAFtC,IAGA2B,eAAe,CAAC3B,KAJlB,EAKE;AACA;AACD;AAED;AACR;AACA;;;AACQ0B,IAAAA,qBAAqB,CAAC1B,KAAtB,GAA8B,KAA9B;AAEA,wCAAQoH,iBAAR,EACEjB,YADF,EAEEhD,4BAAiB0E,IAFnB,EAGE,CAHF,EAIE/M,gBAJF;AAMD,GArCoB,EAsCrB,CACEsM,iBADF,EAEEzF,eAFF,EAGEP,kBAHF,EAIEM,qBAJF,EAKEnB,kBALF,EAMEQ,oBANF,EAOEE,yBAPF,CAtCqB,CAAvB;AAiDA,kCAAoBpG,GAApB,EAAyB,OAAO;AAC9BsN,IAAAA,WAAW,EAAEP,iBADiB;AAE9BQ,IAAAA,cAAc,EAAEN,oBAFc;AAG9BO,IAAAA,MAAM,EAAEJ,YAHsB;AAI9BK,IAAAA,QAAQ,EAAEJ,cAJoB;AAK9BK,IAAAA,KAAK,EAAER,WALuB;AAM9BS,IAAAA,UAAU,EAAER;AANkB,GAAP,CAAzB,EA57B+B,CAo8B/B;AAEA;;AACA,QAAMS,wBAAwB,GAAG,oBAC/B,OAAO;AACLnN,IAAAA,2BADK;AAELQ,IAAAA,mBAFK;AAGLE,IAAAA,wBAHK;AAILN,IAAAA,cAJK;AAKLE,IAAAA,oBALK;AAMLoH,IAAAA,sBANK;AAOLK,IAAAA,kBAPK;AAQLc,IAAAA,uBARK;AASLjC,IAAAA,+BATK;AAULN,IAAAA,2BAVK;AAWLG,IAAAA,0BAXK;AAYLQ,IAAAA,qBAZK;AAaLP,IAAAA,sBAbK;AAcLhE,IAAAA,aAdK;AAeLF,IAAAA,gBAfK;AAgBLwC,IAAAA,qBAhBK;AAiBLI,IAAAA,sBAjBK;AAkBLP,IAAAA,oBAlBK;AAmBLE,IAAAA,oBAnBK;AAoBLoC,IAAAA,sBApBK;AAqBLM,IAAAA,iCArBK;AAsBLjD,IAAAA,uBAtBK;AAuBLS,IAAAA,kBAvBK;AAwBLC,IAAAA,wBAxBK;AAyBLyB,IAAAA,gCAzBK;AA0BLP,IAAAA,qBA1BK;AA2BLP,IAAAA,oBA3BK;AA4BLgB,IAAAA,uBA5BK;AA6BLW,IAAAA,0BA7BK;AA8BL5E,IAAAA,oBAAoB,EAAEC,6BA9BjB;AA+BLC,IAAAA,OAAO,EAAEC,gBA/BJ;AAgCLC,IAAAA,aAAa,EAAEC,sBAhCV;AAiCLC,IAAAA,aAAa,EAAEC,sBAjCV;AAkCLC,IAAAA,WAAW,EAAEC,oBAlCR;AAmCLC,IAAAA,WAAW,EAAEC,oBAnCR;AAoCLuI,IAAAA,iBApCK;AAqCLN,IAAAA,aArCK;AAsCL1E,IAAAA,gBAtCK;AAuCLC,IAAAA;AAvCK,GAAP,CAD+B,EA0C/B,CACErE,aADF,EAEEF,gBAFF,EAGEwC,qBAHF,EAIE0B,sBAJF,EAKEJ,2BALF,EAMEG,0BANF,EAOErB,sBAPF,EAQEL,oBARF,EASEP,uBATF,EAUEK,oBAVF,EAWE6C,sBAXF,EAYET,qBAZF,EAaEE,sBAbF,EAcEM,iCAdF,EAeEM,kBAfF,EAgBE7C,wBAhBF,EAiBE2D,uBAjBF,EAkBEjC,+BAlBF,EAmBE3B,kBAnBF,EAoBEuC,0BApBF,EAqBEb,gCArBF,EAsBEE,uBAtBF,EAuBEhB,oBAvBF,EAwBEO,qBAxBF,EAyBEpG,2BAzBF,EA0BEU,wBA1BF,EA2BEN,cA3BF,EA4BEE,oBA5BF,EA6BEE,mBA7BF,EA8BEqC,6BA9BF,EA+BEE,gBA/BF,EAgCEE,sBAhCF,EAiCEE,sBAjCF,EAkCEE,oBAlCF,EAmCEE,oBAnCF,EAoCEuD,gBApCF,EAqCEC,mBArCF,EAsCE+E,iBAtCF,EAuCEN,aAvCF,CA1C+B,CAAjC;AAoFA,QAAM4B,wBAAwB,GAAG,oBAC/B,OAAO;AACL1K,IAAAA,aADK;AAELF,IAAAA,gBAFK;AAGLqK,IAAAA,WAAW,EAAEP,iBAHR;AAILQ,IAAAA,cAAc,EAAEN,oBAJX;AAKLO,IAAAA,MAAM,EAAEJ,YALH;AAMLK,IAAAA,QAAQ,EAAEJ,cANL;AAOLK,IAAAA,KAAK,EAAER,WAPF;AAQLS,IAAAA,UAAU,EAAER;AARP,GAAP,CAD+B,EAW/B,CACEhK,aADF,EAEEF,gBAFF,EAGE8J,iBAHF,EAIEE,oBAJF,EAKEG,YALF,EAMEC,cANF,EAOEH,WAPF,EAQEC,gBARF,CAX+B,CAAjC,CA3hC+B,CAijC/B;AAEA;;AACA,QAAMW,sBAAsB,GAAG,6CAC7B,OAAO;AACLC,IAAAA,OAAO,EACLC,sBAASC,EAAT,KAAgB,SAAhB,IAA6B9K,aAAa,CAACgC,KAAd,KAAwB,CAAC,CAAtD,GAA0D,CAA1D,GAA8D,CAF3D;AAGL+I,IAAAA,SAAS,EAAE,CACT;AACEC,MAAAA,UAAU,EAAElL,gBAAgB,CAACkC;AAD/B,KADS;AAHN,GAAP,CAD6B,EAU7B,CAAClC,gBAAD,EAAmBE,aAAnB,CAV6B,CAA/B;AAYA,QAAM5B,cAAc,GAAG,oBACrB,MAAM,CAACD,cAAD,EAAiB8M,eAAOC,SAAxB,EAAmCP,sBAAnC,CADe,EAErB,CAACxM,cAAD,EAAiBwM,sBAAjB,CAFqB,CAAvB;AAIA,QAAMQ,6BAA6B,GAAG,6CAAiB,MAAM;AAC3D;AACN;AACA;AACA;AACM,QAAI3L,sBAAJ,EAA4B;AAC1B,aAAO,EAAP;AACD;;AAED,WAAO;AACLgF,MAAAA,MAAM,EAAE,wBAAQ;AACdkF,QAAAA,KAAK,EAAEhD,wBAAwB,CAAC1E,KADlB;AAEdwH,QAAAA,OAAO,EAAEzM;AAFK,OAAR;AADH,KAAP;AAMD,GAfqC,EAenC,CAAC2J,wBAAD,EAA2B5I,mBAA3B,EAAgDwE,qBAAhD,CAfmC,CAAtC;AAgBA,QAAM8I,qBAAqB,GAAG,oBAC5B,MAAM,CAACH,eAAOI,gBAAR,EAA0BF,6BAA1B,CADsB,EAE5B,CAACA,6BAAD,CAF4B,CAA9B;AAIA;AACJ;AACA;AACA;AACA;;AACI,QAAMG,iCAAiC,GAAG,6CAAiB,MAAM;AAC/D,QAAIjK,QAAJ,EAAc;AACZ,aAAO;AACLkK,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;;AACD,WAAO;AACLC,MAAAA,aAAa,EAAE1J,uBAAuB,CAACE;AADlC,KAAP;AAGD,GATyC,EASvC,CAACX,QAAD,CATuC,CAA1C;AAUA,QAAMoK,yBAAyB,GAAG,oBAChC,MAAM,CAACR,eAAOS,oBAAR,EAA8BJ,iCAA9B,CAD0B,EAEhC,CAACA,iCAAD,CAFgC,CAAlC,CAvmC+B,CA2mC/B;AAEA;;AACA;AACJ;AACA;AACA;AACA;AACA;;AACI,kDACE,MAAMlI,kBAAkB,CAACpB,KAD3B,EAEE2J,mBAAmB,IAAI;AACrB;AACR;AACA;AACA;AACA;AACQ,QAAI,CAACA,mBAAD,IAAwBzI,iBAAiB,CAAClB,KAA9C,EAAqD;AACnD;AACD;;AAED,QAAImG,YAAJ;;AACA,QAAIlL,cAAc,KAAK,CAAC,CAAxB,EAA2B;AACzBkL,MAAAA,YAAY,GAAGzF,sBAAsB,CAACV,KAAtC;AACAiB,MAAAA,yBAAyB,CAACjB,KAA1B,GAAkC,CAAC,CAAnC;AACD,KAHD,MAGO;AACLmG,MAAAA,YAAY,GAAG5F,kBAAkB,CAACP,KAAnB,CAAyB/E,cAAzB,CAAf;AACD;;AAED,wCAAQkM,gBAAR,EAAe;AACbd,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,MAAAA,MAAM,EAAE,8BAFK;AAGbC,MAAAA,MAAM,EAAE;AACNpF,QAAAA,kBAAkB,EAAEuI,mBADd;AAENpJ,QAAAA,kBAAkB,EAAEA,kBAAkB,CAACP,KAFjC;AAGNmG,QAAAA;AAHM;AAHK,KAAf;AAUA;AACR;AACA;AACA;AACA;;AACQ,QACEA,YAAY,KAAKrF,4BAAjB,IACAqF,YAAY,KAAKzF,sBAAsB,CAACV,KAF1C,EAGE;AACAkB,MAAAA,iBAAiB,CAAClB,KAAlB,GAA0B,IAA1B;AACAa,MAAAA,oBAAoB,CAACb,KAArB,GAA6B/E,cAA7B;AACA;AACD;;AAED,QAAIG,cAAJ,EAAoB;AAClBgM,MAAAA,iBAAiB,CAACjB,YAAD,EAAehD,4BAAiBC,KAAhC,CAAjB;AACD,KAFD,MAEO;AACLtF,MAAAA,gBAAgB,CAACkC,KAAjB,GAAyBmG,YAAzB;AACD;;AACDjF,IAAAA,iBAAiB,CAAClB,KAAlB,GAA0B,IAA1B;AACD,GAlDH,EAmDE,CAAC/E,cAAD,EAAiBG,cAAjB,CAnDF;AAsDA;AACJ;AACA;AACA;AACA;AACA;;AACI,kDACE,OAAO;AACLF,IAAAA,UAAU,EAAEqF,kBAAkB,CAACP,KAD1B;AAEL3C,IAAAA,eAAe,EAAEyC,uBAAuB,CAACE;AAFpC,GAAP,CADF,EAKE,CAAC4J,MAAD,EAASC,eAAT,KAA6B;AAC3B,UAAM;AAAE3O,MAAAA,UAAF;AAAcmC,MAAAA;AAAd,QAAkCuM,MAAxC;;AACA,UAAME,mBAAmB,GAAGD,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAE3O,UAA7C;;AACA,UAAM6O,wBAAwB,GAAGF,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAExM,eAAlD;;AAEA,QAAI8I,YAAJ;AACA,QAAI6D,eAAJ;AACA,QAAIC,eAAe,GAAG9G,4BAAiBwC,iBAAvC;AAEA;AACR;AACA;AACA;;AACQ,QACE3C,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAAjD,IACAvD,yBAAyB,CAACjB,KAA1B,KAAoC,CAAC,CADrC,IAEA+J,wBAAwB,KAAK1M,eAH/B,EAIE;AACA4M,MAAAA,eAAe,GAAG9G,4BAAiB+G,gBAAnC;AACAF,MAAAA,eAAe,GAAG;AAChBG,QAAAA,QAAQ,EAAE;AADM,OAAlB;AAGA/C,MAAAA,iBAAiB,CACf/J,eADe,EAEf4M,eAFe,EAGf,CAHe,EAIfD,eAJe,CAAjB;AAMD;;AAED,QACEI,IAAI,CAACC,SAAL,CAAenP,UAAf,MAA+BkP,IAAI,CAACC,SAAL,CAAeP,mBAAf,CAA/B,IACA,CAAC1I,kBAAkB,CAACpB,KADpB,IAEA,CAACkB,iBAAiB,CAAClB,KAFnB,IAGA3C,eAAe,IAAI,CAJrB,EAKE;AACA;AACD;;AAED,wCAAQ8J,gBAAR,EAAe;AACbd,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,MAAAA,MAAM,EAAE,wCAFK;AAGbC,MAAAA,MAAM,EAAE;AACNtL,QAAAA;AADM;AAHK,KAAf;AAQA;AACR;AACA;AACA;;AACQ,QACE8H,sBAAsB,CAAChD,KAAvB,KAAiCiD,2BAAgBuB,OAAjD,IACAvD,yBAAyB,CAACjB,KAA1B,KAAoCa,oBAAoB,CAACb,KAF3D,EAGE;AACAmG,MAAAA,YAAY,GACVlF,yBAAyB,CAACjB,KAA1B,KAAoC,CAAC,CAArC,GACI9E,UAAU,CAAC+F,yBAAyB,CAACjB,KAA3B,CADd,GAEIe,oBAAoB,CAACf,KAH3B;AAID,KARD,MAQO,IAAIa,oBAAoB,CAACb,KAArB,KAA+B,CAAC,CAApC,EAAuC;AAC5CmG,MAAAA,YAAY,GAAGzF,sBAAsB,CAACV,KAAtC;AACD,KAFM,MAEA,IAAI0B,qBAAqB,CAAC1B,KAA1B,EAAiC;AACtCmG,MAAAA,YAAY,GAAGP,eAAe,EAA9B;AACD,KAFM,MAEA;AACLO,MAAAA,YAAY,GAAGjL,UAAU,CAAC2F,oBAAoB,CAACb,KAAtB,CAAzB;AAEA;AACV;AACA;AACA;;AACU,UAAI3C,eAAe,KAAK0M,wBAAxB,EAAkD;AAChDE,QAAAA,eAAe,GAAG9G,4BAAiB+G,gBAAnC;AACAF,QAAAA,eAAe,GAAG;AAChBG,UAAAA,QAAQ,EAAE;AADM,SAAlB;AAGD;AACF;;AACD/C,IAAAA,iBAAiB,CAACjB,YAAD,EAAe8D,eAAf,EAAgC,CAAhC,EAAmCD,eAAnC,CAAjB;AACD,GAnFH;AAsFA;AACJ;AACA;AACA;AACA;;AACI,kDACE,OAAO;AACLM,IAAAA,cAAc,EAAE/H,qBAAqB,CAACvC,KADjC;AAELuK,IAAAA,eAAe,EAAE9H,sBAAsB,CAACzC;AAFnC,GAAP,CADF,EAKE,CAAC4J,MAAD,EAASC,eAAT,KAA6B;AAC3B,UAAM;AAAES,MAAAA,cAAF;AAAkBC,MAAAA;AAAlB,QAAsCX,MAA5C;;AACA,UAAMY,sBAAsB,GAAGX,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAES,cAAhD;;AACA,UAAMG,uBAAuB,GAAGZ,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEU,eAAjD;AAEA;AACR;AACA;;;AACQxH,IAAAA,iCAAiC,CAAC/C,KAAlC,GAA0CZ,MAAM,GAC5CwE,IAAI,CAAC8G,GAAL,CACEH,eAAe,GACb3G,IAAI,CAAC8G,GAAL,CAAS9M,WAAW,GAAGqC,uBAAuB,CAACD,KAAxB,CAA8B2K,MAArD,CAFJ,CAD4C,GAK5C/G,IAAI,CAAC8G,GAAL,CAASH,eAAe,GAAGtK,uBAAuB,CAACD,KAAxB,CAA8B2K,MAAzD,CALJ;AAOA,UAAMC,gBAAgB,GACpBhJ,2BAA2B,CAAC5B,KAA5B,KAAsC6B,iCAAMqE,MAA5C,IACAtE,2BAA2B,CAAC5B,KAA5B,KAAsC6B,iCAAMgJ,KAD5C,IAEA9I,0BAA0B,CAAC/B,KAA3B,KAAqC6B,iCAAMqE,MAF3C,IAGAnE,0BAA0B,CAAC/B,KAA3B,KAAqC6B,iCAAMgJ,KAJ7C;;AAMA;AACE;AACV;AACA;AACWP,IAAAA,cAAc,KAAKE,sBAAnB,IACCD,eAAe,KAAKE,uBADtB;AAEA;AACV;AACA;AACUG,IAAAA,gBALA;AAMA;AACV;AACA;AACU,KAAC1J,iBAAiB,CAAClB,KATnB,IAaCsK,cAAc,KAAKhG,0BAAe2B,MAAlC,IACClJ,oBAAoB,KAAKgJ,kCAAuB+E,IAdlD,IAkBCjC,sBAASC,EAAT,KAAgB,SAAhB,IACCjM,gBAAgB,KAAKiH,6BAAkBC,WADxC,IAEC9G,yBAAyB,KAAKuI,+BAAoBC,YAxBtD,EAyBE;AACA1C,MAAAA,iCAAiC,CAAC/C,KAAlC,GAA0C,CAA1C;AACA;AACD;;AAED,wCAAQmH,gBAAR,EAAe;AACbd,MAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,MAAAA,MAAM,EAAE,4CAFK;AAGbC,MAAAA,MAAM,EAAE;AACNX,QAAAA,aAAa,EAAEyE,cADT;AAENS,QAAAA,cAAc,EAAER;AAFV;AAHK,KAAf;AASA,QAAIzP,gBAAgB,GAAG,4CACrB+H,uBAAuB,CAAC7C,KADH,EAErB2C,yBAAyB,CAAC3C,KAFL,CAAvB;AAIA,UAAMmG,YAAY,GAAGP,eAAe,EAApC;AACAwB,IAAAA,iBAAiB,CACfjB,YADe,EAEfhD,4BAAiBuC,QAFF,EAGf,CAHe,EAIf5K,gBAJe,CAAjB;AAMD,GA5EH,EA6EE,CACEsE,MADF,EAEExB,WAFF,EAGEf,gBAHF,EAIEE,oBAJF,EAKEE,yBALF,EAMEgD,uBANF,EAOE2F,eAPF,CA7EF;AAwFA;AACJ;AACA;;AACI,kDACE,MAAM9H,gBAAgB,CAACkC,KADzB,EAEEgL,iBAAiB,IAAI;AACnB,QAAIjN,yBAAJ,EAA+B;AAC7BA,MAAAA,yBAAyB,CAACiC,KAA1B,GAAkCgL,iBAAiB,GAAGrN,QAAtD;AACD;AACF,GANH;AASA;AACJ;AACA;;AACI,kDACE,MAAMK,aAAa,CAACgC,KADtB,EAEEiL,cAAc,IAAI;AAChB,QAAIhN,sBAAJ,EAA4B;AAC1BA,MAAAA,sBAAsB,CAAC+B,KAAvB,GAA+BiL,cAA/B;AACD;AACF,GANH;AASA;AACJ;AACA;AACA;AACA;;AACI,kDACE,OAAO;AACLA,IAAAA,cAAc,EAAEjN,aAAa,CAACgC,KADzB;AAELgL,IAAAA,iBAAiB,EAAElN,gBAAgB,CAACkC,KAF/B;AAGLkL,IAAAA,eAAe,EAAElI,sBAAsB,CAAChD,KAHnC;AAILmL,IAAAA,oBAAoB,EAAEvJ,2BAA2B,CAAC5B,KAJ7C;AAKLoL,IAAAA,mBAAmB,EAAErJ,0BAA0B,CAAC/B;AAL3C,GAAP,CADF,EAQE,CAAC;AACCiL,IAAAA,cADD;AAECC,IAAAA,eAFD;AAGCC,IAAAA,oBAHD;AAICC,IAAAA;AAJD,GAAD,KAKM;AACJ;AACR;AACA;AACQ,QAAIF,eAAe,KAAKjI,2BAAgB+D,OAAxC,EAAiD;AAC/C;AACD;AAED;AACR;AACA;AACA;;;AACQ,QAAIiE,cAAc,GAAG,CAAjB,KAAuB,CAA3B,EAA8B;AAC5B;AACD;AAED;AACR;AACA;;;AACQ,UAAMI,kBAAkB,GACtB,CAACF,oBAAoB,KAAKtJ,iCAAMyJ,GAA/B,IACCH,oBAAoB,KAAKtJ,iCAAMC,YADhC,IAECqJ,oBAAoB,KAAKtJ,iCAAM0J,SAFjC,MAGCH,mBAAmB,KAAKvJ,iCAAMyJ,GAA9B,IACCF,mBAAmB,KAAKvJ,iCAAMC,YAD/B,IAECsJ,mBAAmB,KAAKvJ,iCAAM0J,SALhC,CADF;;AAOA,QAAI,CAACF,kBAAL,EAAyB;AACvB;AACD;AAED;AACR;AACA;AACA;AACA;;;AACQ,QAAIJ,cAAc,KAAKpK,oBAAoB,CAACb,KAA5C,EAAmD;AACjD,0CAAQmH,gBAAR,EAAe;AACbd,QAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,QAAAA,MAAM,EAAE,+BAFK;AAGbC,QAAAA,MAAM,EAAE;AACN3F,UAAAA,oBAAoB,EAAEA,oBAAoB,CAACb,KADrC;AAENhC,UAAAA,aAAa,EAAEiN;AAFT;AAHK,OAAf;AASApK,MAAAA,oBAAoB,CAACb,KAArB,GAA6BiL,cAA7B;AACA,0CAAQ7E,cAAR,EAAwB6E,cAAxB;AACD;AAED;AACR;AACA;;;AACQ,QAAIA,cAAc,KAAK,CAAC,CAApB,IAAyBhM,gBAA7B,EAA+C;AAC7C,0CAAQkI,gBAAR,EAAe;AACbd,QAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADV;AAEbC,QAAAA,MAAM,EAAE,8BAFK;AAGbC,QAAAA,MAAM,EAAE;AACN3F,UAAAA,oBAAoB,EAAEA,oBAAoB,CAACb,KADrC;AAENhC,UAAAA,aAAa,EAAEiN;AAFT;AAHK,OAAf;AAQA,0CAAQhM,gBAAR;AACD;AACF,GA5EH,EA6EE,CAACmH,cAAD,EAAiBnH,gBAAjB,CA7EF;AAgFA;AACJ;AACA;AACA;AACA;;AACI,wBAAU,MAAM;AACd,QAAIiC,iBAAiB,CAAClB,KAAtB,EAA6B;AAC3B4H,MAAAA,iBAAiB,CAAC3M,cAAD,CAAjB;AACD;AACF,GAJD,EAIG,CACDA,cADC,EAED4F,oBAFC,EAGDK,iBAHC,EAID0G,iBAJC,CAJH,EAr9C+B,CA+9C/B;AAEA;;AACA,wBAAM;AACJvB,IAAAA,SAAS,EAAE1L,WAAW,CAAC2L,IADnB;AAEJC,IAAAA,MAAM,EAAE,QAFJ;AAGJC,IAAAA,MAAM,EAAE;AACNjG,MAAAA,kBAAkB,EAAEA,kBAAkB,CAACP,KADjC;AAENa,MAAAA,oBAAoB,EAAEA,oBAAoB,CAACb,KAFrC;AAGNwL,MAAAA,aAAa,EAAEvQ;AAHT;AAHJ,GAAN;AASA,sBACE,6BAAC,6BAAD;AAAqB,IAAA,KAAK,EAAEyN;AAA5B,kBACE,6BAAC,qCAAD;AAA6B,IAAA,KAAK,EAAED;AAApC,kBACE,6BAAC,2CAAD;AACE,IAAA,yBAAyB,EAAE7L;AAD7B,kBAGE,6BAAC,qCAAD;AACE,IAAA,GAAG,EAAC,8BADN;AAEE,IAAA,aAAa,EAAEoB,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,iBAAiB,EAAEyB;AAJrB,IAHF,eASE,6BAAC,6BAAD;AACE,IAAA,GAAG,EAAC,sBADN;AAEE,IAAA,qBAAqB,EAAE,CAACH,MAF1B;AAGE,IAAA,eAAe,EAAEQ,wBAHnB;AAIE,IAAA,eAAe,EAAEK,uBAJnB;AAKE,IAAA,QAAQ,EAAEtC,QALZ;AAME,IAAA,WAAW,EAAEC,WANf;AAOE,IAAA,QAAQ,EAAEyB,QAPZ;AAQE,IAAA,KAAK,EAAEhD;AART,kBAUE,6BAAC,8BAAD,CAAU,IAAV;AAAe,IAAA,KAAK,EAAED;AAAtB,kBACE,6BAAC,uCAAD;AACE,IAAA,GAAG,EAAC,gCADN;AAEE,IAAA,aAAa,EAAE4B,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,mBAAmB,EAAE0B,mBAJvB;AAKE,IAAA,eAAe,EAAEjD;AALnB,IADF,eAQE,6BAAC,8BAAD,CAAU,IAAV;AACE,IAAA,aAAa,EAAC,UADhB;AAEE,IAAA,KAAK,EAAEkN;AAFT,kBAIE,6BAAC,iCAAD;AACE,IAAA,GAAG,EAAC,8BADN;AAEE,IAAA,KAAK,EAAEL;AAFT,KAIG,OAAOzJ,OAAP,KAAmB,UAAnB,gBAAgC,6BAAC,OAAD,OAAhC,GAA8CA,OAJjD,EAMGF,eAAe,iBACd,6BAAC,mCAAD;AACE,IAAA,eAAe,EAAEA;AADnB,IAPJ,CAJF,CARF,eAyBE,6BAAC,mCAAD;AACE,IAAA,GAAG,EAAC,4BADN;AAEE,IAAA,aAAa,EAAEzB,aAFjB;AAGE,IAAA,gBAAgB,EAAEF,gBAHpB;AAIE,IAAA,YAAY,EAAEqC,oBAJhB;AAKE,IAAA,0BAA0B,EAAE3E,0BAL9B;AAME,IAAA,cAAc,EAAEE,cANlB;AAOE,IAAA,oBAAoB,EAAEE,oBAPxB;AAQE,IAAA,wBAAwB,EAAEI,wBAR5B;AASE,IAAA,gBAAgB,EAAEa,gBATpB;AAUE,IAAA,eAAe,EAAEyC,eAVnB;AAWE,IAAA,WAAW,EAAE7C,oBAXf;AAYE,IAAA,oBAAoB,EAAEE;AAZxB,IAzBF,CAVF,CATF,CADF,CADF,CADF;AA0FD,CAtkD0B,CAA7B;AAykDA,MAAMhC,WAAW,gBAAG,iBAAKD,oBAAL,CAApB;AACAC,WAAW,CAAC8Q,WAAZ,GAA0B,aAA1B;eAEe9Q,W","sourcesContent":["import React, {\n  useMemo,\n  useCallback,\n  forwardRef,\n  useImperativeHandle,\n  memo,\n  useEffect,\n} from 'react';\nimport { Platform } from 'react-native';\nimport invariant from 'invariant';\nimport Animated, {\n  useAnimatedReaction,\n  useSharedValue,\n  useAnimatedStyle,\n  useDerivedValue,\n  runOnJS,\n  interpolate,\n  Extrapolate,\n  runOnUI,\n  cancelAnimation,\n  useWorkletCallback,\n  WithSpringConfig,\n  WithTimingConfig,\n} from 'react-native-reanimated';\nimport { State } from 'react-native-gesture-handler';\nimport {\n  useScrollable,\n  usePropsValidator,\n  useReactiveSharedValue,\n  useNormalizedSnapPoints,\n  useKeyboard,\n} from '../../hooks';\nimport {\n  BottomSheetInternalProvider,\n  BottomSheetProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport BottomSheetGestureHandlersProvider from '../bottomSheetGestureHandlersProvider';\nimport BottomSheetBackdropContainer from '../bottomSheetBackdropContainer';\nimport BottomSheetHandleContainer from '../bottomSheetHandleContainer';\nimport BottomSheetBackgroundContainer from '../bottomSheetBackgroundContainer';\nimport BottomSheetFooterContainer from '../bottomSheetFooterContainer/BottomSheetFooterContainer';\nimport BottomSheetDraggableView from '../bottomSheetDraggableView';\n// import BottomSheetDebugView from '../bottomSheetDebugView';\nimport {\n  ANIMATION_STATE,\n  KEYBOARD_STATE,\n  KEYBOARD_BEHAVIOR,\n  SHEET_STATE,\n  SCROLLABLE_STATE,\n  KEYBOARD_BLUR_BEHAVIOR,\n  KEYBOARD_INPUT_MODE,\n  ANIMATION_SOURCE,\n} from '../../constants';\nimport {\n  animate,\n  getKeyboardAnimationConfigs,\n  normalizeSnapPoint,\n  print,\n} from '../../utilities';\nimport {\n  DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,\n  DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n  DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n  DEFAULT_ENABLE_OVER_DRAG,\n  DEFAULT_ANIMATE_ON_MOUNT,\n  DEFAULT_KEYBOARD_BEHAVIOR,\n  DEFAULT_KEYBOARD_BLUR_BEHAVIOR,\n  DEFAULT_KEYBOARD_INPUT_MODE,\n  INITIAL_CONTAINER_HEIGHT,\n  INITIAL_HANDLE_HEIGHT,\n  INITIAL_POSITION,\n  INITIAL_SNAP_POINT,\n  DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,\n  INITIAL_CONTAINER_OFFSET,\n  INITIAL_VALUE,\n  DEFAULT_DYNAMIC_SIZING,\n} from './constants';\nimport type { BottomSheetMethods, Insets } from '../../types';\nimport type { BottomSheetProps, AnimateToPositionType } from './types';\nimport { styles } from './styles';\n\nAnimated.addWhitelistedUIProps({\n  decelerationRate: true,\n});\n\ntype BottomSheet = BottomSheetMethods;\n\nconst BottomSheetComponent = forwardRef<BottomSheet, BottomSheetProps>(\n  function BottomSheet(props, ref) {\n    //#region validate props\n    usePropsValidator(props);\n    //#endregion\n\n    //#region extract props\n    const {\n      // animations configurations\n      animationConfigs: _providedAnimationConfigs,\n\n      // configurations\n      index: _providedIndex = 0,\n      snapPoints: _providedSnapPoints,\n      animateOnMount = DEFAULT_ANIMATE_ON_MOUNT,\n      enableContentPanningGesture = DEFAULT_ENABLE_CONTENT_PANNING_GESTURE,\n      enableHandlePanningGesture = DEFAULT_ENABLE_HANDLE_PANNING_GESTURE,\n      enableOverDrag = DEFAULT_ENABLE_OVER_DRAG,\n      enablePanDownToClose = DEFAULT_ENABLE_PAN_DOWN_TO_CLOSE,\n      enableDynamicSizing = DEFAULT_DYNAMIC_SIZING,\n      overDragResistanceFactor = DEFAULT_OVER_DRAG_RESISTANCE_FACTOR,\n\n      // styles\n      style: _providedStyle,\n      containerStyle: _providedContainerStyle,\n      backgroundStyle: _providedBackgroundStyle,\n      handleStyle: _providedHandleStyle,\n      handleIndicatorStyle: _providedHandleIndicatorStyle,\n\n      // hooks\n      gestureEventsHandlersHook,\n\n      // keyboard\n      keyboardBehavior = DEFAULT_KEYBOARD_BEHAVIOR,\n      keyboardBlurBehavior = DEFAULT_KEYBOARD_BLUR_BEHAVIOR,\n      android_keyboardInputMode = DEFAULT_KEYBOARD_INPUT_MODE,\n\n      // layout\n      handleHeight: _providedHandleHeight,\n      containerHeight: _providedContainerHeight,\n      contentHeight: _providedContentHeight,\n      containerOffset: _providedContainerOffset,\n      topInset = 0,\n      bottomInset = 0,\n      maxDynamicContentSize,\n\n      // animated callback shared values\n      animatedPosition: _providedAnimatedPosition,\n      animatedIndex: _providedAnimatedIndex,\n\n      // gestures\n      simultaneousHandlers: _providedSimultaneousHandlers,\n      waitFor: _providedWaitFor,\n      activeOffsetX: _providedActiveOffsetX,\n      activeOffsetY: _providedActiveOffsetY,\n      failOffsetX: _providedFailOffsetX,\n      failOffsetY: _providedFailOffsetY,\n\n      // callbacks\n      onChange: _providedOnChange,\n      onClose: _providedOnClose,\n      onAnimate: _providedOnAnimate,\n\n      // private\n      $modal = false,\n      detached = false,\n\n      // components\n      handleComponent,\n      backdropComponent,\n      backgroundComponent,\n      footerComponent,\n      children: Content,\n    } = props;\n    //#endregion\n\n    //#region layout variables\n    /**\n     * This variable is consider an internal variable,\n     * that will be used conditionally in `animatedContainerHeight`\n     */\n    const _animatedContainerHeight = useReactiveSharedValue(\n      _providedContainerHeight ?? INITIAL_CONTAINER_HEIGHT\n    );\n    /**\n     * This is a conditional variable, where if the `BottomSheet` is used\n     * in a modal, then it will subset vertical insets (top+bottom) from\n     * provided container height.\n     */\n    const animatedContainerHeight = useDerivedValue(() => {\n      const verticalInset = topInset + bottomInset;\n      return $modal\n        ? _animatedContainerHeight.value - verticalInset\n        : _animatedContainerHeight.value;\n    }, [$modal, topInset, bottomInset]);\n    const animatedContainerOffset = useReactiveSharedValue(\n      _providedContainerOffset ?? INITIAL_CONTAINER_OFFSET\n    ) as Animated.SharedValue<Insets>;\n    const animatedHandleHeight = useReactiveSharedValue(\n      _providedHandleHeight ?? INITIAL_HANDLE_HEIGHT\n    );\n    const animatedFooterHeight = useSharedValue(0);\n    const animatedContentHeight = useSharedValue(INITIAL_CONTAINER_HEIGHT);\n    const animatedSnapPoints = useNormalizedSnapPoints(\n      _providedSnapPoints,\n      animatedContainerHeight,\n      animatedContentHeight,\n      animatedHandleHeight,\n      enableDynamicSizing,\n      maxDynamicContentSize\n    );\n    const animatedHighestSnapPoint = useDerivedValue(\n      () => animatedSnapPoints.value[animatedSnapPoints.value.length - 1]\n    );\n    const animatedClosedPosition = useDerivedValue(() => {\n      let closedPosition = animatedContainerHeight.value;\n\n      if ($modal || detached) {\n        closedPosition = animatedContainerHeight.value + bottomInset;\n      }\n\n      return closedPosition;\n    }, [$modal, detached, bottomInset]);\n    const animatedSheetHeight = useDerivedValue(\n      () => animatedContainerHeight.value - animatedHighestSnapPoint.value\n    );\n    const animatedCurrentIndex = useReactiveSharedValue(\n      animateOnMount ? -1 : _providedIndex\n    );\n    const animatedPosition = useSharedValue(INITIAL_POSITION);\n    const animatedNextPosition = useSharedValue(INITIAL_VALUE);\n    const animatedNextPositionIndex = useSharedValue(0);\n\n    // conditional\n    const isAnimatedOnMount = useSharedValue(false);\n    const isContentHeightFixed = useSharedValue(false);\n    const isLayoutCalculated = useDerivedValue(() => {\n      let isContainerHeightCalculated = false;\n      //container height was provided.\n      if (\n        _providedContainerHeight !== null ||\n        _providedContainerHeight !== undefined\n      ) {\n        isContainerHeightCalculated = true;\n      }\n      // container height did set.\n      if (animatedContainerHeight.value !== INITIAL_CONTAINER_HEIGHT) {\n        isContainerHeightCalculated = true;\n      }\n\n      let isHandleHeightCalculated = false;\n      // handle height is provided.\n      if (\n        _providedHandleHeight !== null &&\n        _providedHandleHeight !== undefined &&\n        typeof _providedHandleHeight === 'number'\n      ) {\n        isHandleHeightCalculated = true;\n      }\n      // handle component is null.\n      if (handleComponent === null) {\n        animatedHandleHeight.value = 0;\n        isHandleHeightCalculated = true;\n      }\n      // handle height did set.\n      if (animatedHandleHeight.value !== INITIAL_HANDLE_HEIGHT) {\n        isHandleHeightCalculated = true;\n      }\n\n      let isSnapPointsNormalized = false;\n      // the first snap point did normalized\n      if (animatedSnapPoints.value[0] !== INITIAL_SNAP_POINT) {\n        isSnapPointsNormalized = true;\n      }\n\n      return (\n        isContainerHeightCalculated &&\n        isHandleHeightCalculated &&\n        isSnapPointsNormalized\n      );\n    });\n    const isInTemporaryPosition = useSharedValue(false);\n    const isForcedClosing = useSharedValue(false);\n\n    // gesture\n    const animatedContentGestureState = useSharedValue<State>(\n      State.UNDETERMINED\n    );\n    const animatedHandleGestureState = useSharedValue<State>(\n      State.UNDETERMINED\n    );\n    //#endregion\n\n    //#region hooks variables\n    // scrollable variables\n    const {\n      animatedScrollableType,\n      animatedScrollableContentOffsetY,\n      animatedScrollableOverrideState,\n      isScrollableRefreshable,\n      setScrollableRef,\n      removeScrollableRef,\n    } = useScrollable();\n    // keyboard\n    const {\n      state: animatedKeyboardState,\n      height: animatedKeyboardHeight,\n      animationDuration: keyboardAnimationDuration,\n      animationEasing: keyboardAnimationEasing,\n      shouldHandleKeyboardEvents,\n    } = useKeyboard();\n    const animatedKeyboardHeightInContainer = useSharedValue(0);\n    //#endregion\n\n    //#region state/dynamic variables\n    // states\n    const animatedAnimationState = useSharedValue(ANIMATION_STATE.UNDETERMINED);\n    const animatedAnimationSource = useSharedValue<ANIMATION_SOURCE>(\n      ANIMATION_SOURCE.MOUNT\n    );\n    const animatedSheetState = useDerivedValue(() => {\n      // closed position = position >= container height\n      if (animatedPosition.value >= animatedClosedPosition.value)\n        return SHEET_STATE.CLOSED;\n\n      // extended position = container height - sheet height\n      const extendedPosition =\n        animatedContainerHeight.value - animatedSheetHeight.value;\n      if (animatedPosition.value === extendedPosition)\n        return SHEET_STATE.EXTENDED;\n\n      // extended position with keyboard =\n      // container height - (sheet height + keyboard height in root container)\n      const keyboardHeightInContainer = animatedKeyboardHeightInContainer.value;\n      const extendedPositionWithKeyboard = Math.max(\n        0,\n        animatedContainerHeight.value -\n          (animatedSheetHeight.value + keyboardHeightInContainer)\n      );\n\n      // detect if keyboard is open and the sheet is in temporary position\n      if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n        isInTemporaryPosition.value &&\n        animatedPosition.value === extendedPositionWithKeyboard\n      ) {\n        return SHEET_STATE.EXTENDED;\n      }\n\n      // fill parent = 0\n      if (animatedPosition.value === 0) {\n        return SHEET_STATE.FILL_PARENT;\n      }\n\n      // detect if position is below extended point\n      if (animatedPosition.value < extendedPosition) {\n        return SHEET_STATE.OVER_EXTENDED;\n      }\n\n      return SHEET_STATE.OPENED;\n    }, [\n      animatedClosedPosition,\n      animatedContainerHeight,\n      animatedKeyboardHeightInContainer,\n      animatedPosition,\n      animatedSheetHeight,\n      isInTemporaryPosition,\n      keyboardBehavior,\n    ]);\n    const animatedScrollableState = useDerivedValue(() => {\n      /**\n       * if scrollable override state is set, then we just return its value.\n       */\n      if (\n        animatedScrollableOverrideState.value !== SCROLLABLE_STATE.UNDETERMINED\n      ) {\n        return animatedScrollableOverrideState.value;\n      }\n      /**\n       * if sheet state is fill parent, then unlock scrolling\n       */\n      if (animatedSheetState.value === SHEET_STATE.FILL_PARENT) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      /**\n       * if sheet state is extended, then unlock scrolling\n       */\n      if (animatedSheetState.value === SHEET_STATE.EXTENDED) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      /**\n       * if keyboard is shown and sheet is animating\n       * then we do not lock the scrolling to not lose\n       * current scrollable scroll position.\n       */\n      if (\n        animatedKeyboardState.value === KEYBOARD_STATE.SHOWN &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING\n      ) {\n        return SCROLLABLE_STATE.UNLOCKED;\n      }\n\n      return SCROLLABLE_STATE.LOCKED;\n    });\n    // dynamic\n    const animatedContentHeightMax = useDerivedValue(() => {\n      const keyboardHeightInContainer = animatedKeyboardHeightInContainer.value;\n      const handleHeight = Math.max(0, animatedHandleHeight.value);\n      let contentHeight = animatedSheetHeight.value - handleHeight;\n\n      if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.extend &&\n        animatedKeyboardState.value === KEYBOARD_STATE.SHOWN\n      ) {\n        contentHeight = contentHeight - keyboardHeightInContainer;\n      } else if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.fillParent &&\n        isInTemporaryPosition.value\n      ) {\n        if (animatedKeyboardState.value === KEYBOARD_STATE.SHOWN) {\n          contentHeight =\n            animatedContainerHeight.value -\n            handleHeight -\n            keyboardHeightInContainer;\n        } else {\n          contentHeight = animatedContainerHeight.value - handleHeight;\n        }\n      } else if (\n        keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n        isInTemporaryPosition.value\n      ) {\n        const contentWithKeyboardHeight =\n          contentHeight + keyboardHeightInContainer;\n\n        if (animatedKeyboardState.value === KEYBOARD_STATE.SHOWN) {\n          if (\n            keyboardHeightInContainer + animatedSheetHeight.value >\n            animatedContainerHeight.value\n          ) {\n            contentHeight =\n              animatedContainerHeight.value -\n              keyboardHeightInContainer -\n              handleHeight;\n          }\n        } else if (\n          contentWithKeyboardHeight + handleHeight >\n          animatedContainerHeight.value\n        ) {\n          contentHeight = animatedContainerHeight.value - handleHeight;\n        } else {\n          contentHeight = contentWithKeyboardHeight;\n        }\n      }\n\n      /**\n       * before the container is measured, `contentHeight` value will be below zero,\n       * which will lead to freeze the scrollable.\n       *\n       * @link (https://github.com/gorhom/react-native-bottom-sheet/issues/470)\n       */\n      return Math.max(contentHeight, 0);\n    }, [\n      animatedContainerHeight,\n      animatedHandleHeight,\n      animatedKeyboardHeightInContainer,\n      animatedKeyboardState,\n      animatedSheetHeight,\n      isInTemporaryPosition,\n      keyboardBehavior,\n    ]);\n    const animatedIndex = useDerivedValue(() => {\n      const adjustedSnapPoints = animatedSnapPoints.value.slice().reverse();\n      const adjustedSnapPointsIndexes = animatedSnapPoints.value\n        .slice()\n        .map((_: any, index: number) => index)\n        .reverse();\n\n      /**\n       * we add the close state index `-1`\n       */\n      adjustedSnapPoints.push(animatedContainerHeight.value);\n      adjustedSnapPointsIndexes.push(-1);\n\n      const currentIndex = isLayoutCalculated.value\n        ? interpolate(\n            animatedPosition.value,\n            adjustedSnapPoints,\n            adjustedSnapPointsIndexes,\n            Extrapolate.CLAMP\n          )\n        : -1;\n\n      /**\n       * if the sheet is currently running an animation by the keyboard opening,\n       * then we clamp the index on android with resize keyboard mode.\n       */\n      if (\n        android_keyboardInputMode === KEYBOARD_INPUT_MODE.adjustResize &&\n        animatedAnimationSource.value === ANIMATION_SOURCE.KEYBOARD &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n        isInTemporaryPosition.value\n      ) {\n        return Math.max(animatedCurrentIndex.value, currentIndex);\n      }\n\n      /**\n       * if the sheet is currently running an animation by snap point change - usually caused\n       * by dynamic content height -, then we return the next position index.\n       */\n      if (\n        animatedAnimationSource.value === ANIMATION_SOURCE.SNAP_POINT_CHANGE &&\n        animatedAnimationState.value === ANIMATION_STATE.RUNNING\n      ) {\n        return animatedNextPositionIndex.value;\n      }\n\n      return currentIndex;\n    }, [android_keyboardInputMode]);\n    //#endregion\n\n    //#region private methods\n    /**\n     * Calculate the next position based on keyboard state.\n     */\n    const getNextPosition = useWorkletCallback(\n      function getNextPosition() {\n        'worklet';\n        const currentIndex = animatedCurrentIndex.value;\n        const snapPoints = animatedSnapPoints.value;\n        const keyboardState = animatedKeyboardState.value;\n        const highestSnapPoint = animatedHighestSnapPoint.value;\n\n        /**\n         * Handle restore sheet position on blur\n         */\n        if (\n          keyboardBlurBehavior === KEYBOARD_BLUR_BEHAVIOR.restore &&\n          keyboardState === KEYBOARD_STATE.HIDDEN &&\n          animatedContentGestureState.value !== State.ACTIVE &&\n          animatedHandleGestureState.value !== State.ACTIVE\n        ) {\n          isInTemporaryPosition.value = false;\n          const nextPosition = snapPoints[currentIndex];\n          return nextPosition;\n        }\n\n        /**\n         * Handle extend behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.extend &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          return highestSnapPoint;\n        }\n\n        /**\n         * Handle full screen behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.fillParent &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          isInTemporaryPosition.value = true;\n          return 0;\n        }\n\n        /**\n         * handle interactive behavior\n         */\n        if (\n          keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n          keyboardState === KEYBOARD_STATE.SHOWN\n        ) {\n          isInTemporaryPosition.value = true;\n          const keyboardHeightInContainer =\n            animatedKeyboardHeightInContainer.value;\n          return Math.max(0, highestSnapPoint - keyboardHeightInContainer);\n        }\n\n        if (isInTemporaryPosition.value) {\n          return animatedPosition.value;\n        }\n\n        return snapPoints[currentIndex];\n      },\n      [\n        animatedContentGestureState,\n        animatedCurrentIndex,\n        animatedHandleGestureState,\n        animatedHighestSnapPoint,\n        animatedKeyboardHeightInContainer,\n        animatedKeyboardState,\n        animatedPosition,\n        animatedSnapPoints,\n        isInTemporaryPosition,\n        keyboardBehavior,\n        keyboardBlurBehavior,\n      ]\n    );\n    const handleOnChange = useCallback(\n      function handleOnChange(index: number) {\n        print({\n          component: BottomSheet.name,\n          method: handleOnChange.name,\n          params: {\n            index,\n            animatedCurrentIndex: animatedCurrentIndex.value,\n          },\n        });\n\n        if (_providedOnChange) {\n          _providedOnChange(index);\n        }\n      },\n      [_providedOnChange, animatedCurrentIndex]\n    );\n    const handleOnAnimate = useCallback(\n      function handleOnAnimate(toPoint: number) {\n        const snapPoints = animatedSnapPoints.value;\n        const toIndex = snapPoints.indexOf(toPoint);\n\n        print({\n          component: BottomSheet.name,\n          method: handleOnAnimate.name,\n          params: {\n            toIndex,\n            fromIndex: animatedCurrentIndex.value,\n          },\n        });\n\n        if (!_providedOnAnimate) {\n          return;\n        }\n\n        if (toIndex !== animatedCurrentIndex.value) {\n          _providedOnAnimate(animatedCurrentIndex.value, toIndex);\n        }\n      },\n      [_providedOnAnimate, animatedSnapPoints, animatedCurrentIndex]\n    );\n    //#endregion\n\n    //#region animation\n    const stopAnimation = useWorkletCallback(() => {\n      cancelAnimation(animatedPosition);\n      isForcedClosing.value = false;\n      animatedAnimationSource.value = ANIMATION_SOURCE.NONE;\n      animatedAnimationState.value = ANIMATION_STATE.STOPPED;\n    }, [animatedPosition, animatedAnimationState, animatedAnimationSource]);\n    const animateToPositionCompleted = useWorkletCallback(\n      function animateToPositionCompleted(isFinished?: boolean) {\n        isForcedClosing.value = false;\n\n        if (!isFinished) {\n          return;\n        }\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: animateToPositionCompleted.name,\n          params: {\n            animatedCurrentIndex: animatedCurrentIndex.value,\n            animatedNextPosition: animatedNextPosition.value,\n            animatedNextPositionIndex: animatedNextPositionIndex.value,\n          },\n        });\n\n        animatedAnimationSource.value = ANIMATION_SOURCE.NONE;\n        animatedAnimationState.value = ANIMATION_STATE.STOPPED;\n        animatedNextPosition.value = INITIAL_VALUE;\n        animatedNextPositionIndex.value = INITIAL_VALUE;\n      }\n    );\n    const animateToPosition: AnimateToPositionType = useWorkletCallback(\n      function animateToPosition(\n        position: number,\n        source: ANIMATION_SOURCE,\n        velocity: number = 0,\n        configs?: WithTimingConfig | WithSpringConfig\n      ) {\n        if (\n          position === animatedPosition.value ||\n          position === undefined ||\n          (animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n            position === animatedNextPosition.value)\n        ) {\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: animateToPosition.name,\n          params: {\n            currentPosition: animatedPosition.value,\n            position,\n            velocity,\n            animatedContainerHeight: animatedContainerHeight.value,\n          },\n        });\n\n        stopAnimation();\n\n        /**\n         * set animation state to running, and source\n         */\n        animatedAnimationState.value = ANIMATION_STATE.RUNNING;\n        animatedAnimationSource.value = source;\n\n        /**\n         * store next position\n         */\n        animatedNextPosition.value = position;\n        animatedNextPositionIndex.value =\n          animatedSnapPoints.value.indexOf(position);\n\n        /**\n         * fire `onAnimate` callback\n         */\n        runOnJS(handleOnAnimate)(position);\n\n        /**\n         * force animation configs from parameters, if provided\n         */\n        if (configs !== undefined) {\n          animatedPosition.value = animate({\n            point: position,\n            configs,\n            velocity,\n            onComplete: animateToPositionCompleted,\n          });\n        } else {\n          /**\n           * use animationConfigs callback, if provided\n           */\n          animatedPosition.value = animate({\n            point: position,\n            velocity,\n            configs: _providedAnimationConfigs,\n            onComplete: animateToPositionCompleted,\n          });\n        }\n      },\n      [handleOnAnimate, _providedAnimationConfigs]\n    );\n    //#endregion\n\n    //#region public methods\n    const handleSnapToIndex = useCallback(\n      function handleSnapToIndex(\n        index: number,\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        const snapPoints = animatedSnapPoints.value;\n        invariant(\n          index >= -1 && index <= snapPoints.length - 1,\n          `'index' was provided but out of the provided snap points range! expected value to be between -1, ${\n            snapPoints.length - 1\n          }`\n        );\n        print({\n          component: BottomSheet.name,\n          method: handleSnapToIndex.name,\n          params: {\n            index,\n          },\n        });\n\n        const nextPosition = snapPoints[index];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          index === animatedNextPositionIndex.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        isForcedClosing,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n    const handleSnapToPosition = useWorkletCallback(\n      function handleSnapToPosition(\n        position: number | string,\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleSnapToPosition.name,\n          params: {\n            position,\n          },\n        });\n\n        /**\n         * normalized provided position.\n         */\n        const nextPosition = normalizeSnapPoint(\n          position,\n          animatedContainerHeight.value\n        );\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * mark the new position as temporary.\n         */\n        isInTemporaryPosition.value = true;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        bottomInset,\n        topInset,\n        isLayoutCalculated,\n        isForcedClosing,\n        animatedContainerHeight,\n        animatedPosition,\n      ]\n    );\n    const handleClose = useCallback(\n      function handleClose(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleClose.name,\n        });\n\n        const nextPosition = animatedClosedPosition.value;\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position variable.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        animatedNextPosition,\n        animatedClosedPosition,\n      ]\n    );\n    const handleForceClose = useCallback(\n      function handleForceClose(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleForceClose.name,\n        });\n\n        const nextPosition = animatedClosedPosition.value;\n\n        /**\n         * exit method if :\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position variable.\n         */\n        isInTemporaryPosition.value = false;\n\n        /**\n         * set force closing variable.\n         */\n        isForcedClosing.value = true;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isInTemporaryPosition,\n        animatedNextPosition,\n        animatedClosedPosition,\n      ]\n    );\n    const handleExpand = useCallback(\n      function handleExpand(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleExpand.name,\n        });\n\n        const snapPoints = animatedSnapPoints.value;\n        const nextPosition = snapPoints[snapPoints.length - 1];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated.value ||\n          snapPoints.length - 1 === animatedNextPositionIndex.value ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isInTemporaryPosition,\n        isLayoutCalculated,\n        isForcedClosing,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n    const handleCollapse = useCallback(\n      function handleCollapse(\n        animationConfigs?: WithSpringConfig | WithTimingConfig\n      ) {\n        print({\n          component: BottomSheet.name,\n          method: handleCollapse.name,\n        });\n\n        const nextPosition = animatedSnapPoints.value[0];\n\n        /**\n         * exit method if :\n         * - layout is not calculated.\n         * - already animating to next position.\n         * - sheet is forced closing.\n         */\n        if (\n          !isLayoutCalculated ||\n          animatedNextPositionIndex.value === 0 ||\n          nextPosition === animatedNextPosition.value ||\n          isForcedClosing.value\n        ) {\n          return;\n        }\n\n        /**\n         * reset temporary position boolean.\n         */\n        isInTemporaryPosition.value = false;\n\n        runOnUI(animateToPosition)(\n          nextPosition,\n          ANIMATION_SOURCE.USER,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        animateToPosition,\n        isForcedClosing,\n        isLayoutCalculated,\n        isInTemporaryPosition,\n        animatedSnapPoints,\n        animatedNextPosition,\n        animatedNextPositionIndex,\n      ]\n    );\n\n    useImperativeHandle(ref, () => ({\n      snapToIndex: handleSnapToIndex,\n      snapToPosition: handleSnapToPosition,\n      expand: handleExpand,\n      collapse: handleCollapse,\n      close: handleClose,\n      forceClose: handleForceClose,\n    }));\n    //#endregion\n\n    //#region contexts variables\n    const internalContextVariables = useMemo(\n      () => ({\n        enableContentPanningGesture,\n        enableDynamicSizing,\n        overDragResistanceFactor,\n        enableOverDrag,\n        enablePanDownToClose,\n        animatedAnimationState,\n        animatedSheetState,\n        animatedScrollableState,\n        animatedScrollableOverrideState,\n        animatedContentGestureState,\n        animatedHandleGestureState,\n        animatedKeyboardState,\n        animatedScrollableType,\n        animatedIndex,\n        animatedPosition,\n        animatedContentHeight,\n        animatedClosedPosition,\n        animatedHandleHeight,\n        animatedFooterHeight,\n        animatedKeyboardHeight,\n        animatedKeyboardHeightInContainer,\n        animatedContainerHeight,\n        animatedSnapPoints,\n        animatedHighestSnapPoint,\n        animatedScrollableContentOffsetY,\n        isInTemporaryPosition,\n        isContentHeightFixed,\n        isScrollableRefreshable,\n        shouldHandleKeyboardEvents,\n        simultaneousHandlers: _providedSimultaneousHandlers,\n        waitFor: _providedWaitFor,\n        activeOffsetX: _providedActiveOffsetX,\n        activeOffsetY: _providedActiveOffsetY,\n        failOffsetX: _providedFailOffsetX,\n        failOffsetY: _providedFailOffsetY,\n        animateToPosition,\n        stopAnimation,\n        setScrollableRef,\n        removeScrollableRef,\n      }),\n      [\n        animatedIndex,\n        animatedPosition,\n        animatedContentHeight,\n        animatedScrollableType,\n        animatedContentGestureState,\n        animatedHandleGestureState,\n        animatedClosedPosition,\n        animatedFooterHeight,\n        animatedContainerHeight,\n        animatedHandleHeight,\n        animatedAnimationState,\n        animatedKeyboardState,\n        animatedKeyboardHeight,\n        animatedKeyboardHeightInContainer,\n        animatedSheetState,\n        animatedHighestSnapPoint,\n        animatedScrollableState,\n        animatedScrollableOverrideState,\n        animatedSnapPoints,\n        shouldHandleKeyboardEvents,\n        animatedScrollableContentOffsetY,\n        isScrollableRefreshable,\n        isContentHeightFixed,\n        isInTemporaryPosition,\n        enableContentPanningGesture,\n        overDragResistanceFactor,\n        enableOverDrag,\n        enablePanDownToClose,\n        enableDynamicSizing,\n        _providedSimultaneousHandlers,\n        _providedWaitFor,\n        _providedActiveOffsetX,\n        _providedActiveOffsetY,\n        _providedFailOffsetX,\n        _providedFailOffsetY,\n        setScrollableRef,\n        removeScrollableRef,\n        animateToPosition,\n        stopAnimation,\n      ]\n    );\n    const externalContextVariables = useMemo(\n      () => ({\n        animatedIndex,\n        animatedPosition,\n        snapToIndex: handleSnapToIndex,\n        snapToPosition: handleSnapToPosition,\n        expand: handleExpand,\n        collapse: handleCollapse,\n        close: handleClose,\n        forceClose: handleForceClose,\n      }),\n      [\n        animatedIndex,\n        animatedPosition,\n        handleSnapToIndex,\n        handleSnapToPosition,\n        handleExpand,\n        handleCollapse,\n        handleClose,\n        handleForceClose,\n      ]\n    );\n    //#endregion\n\n    //#region styles\n    const containerAnimatedStyle = useAnimatedStyle(\n      () => ({\n        opacity:\n          Platform.OS === 'android' && animatedIndex.value === -1 ? 0 : 1,\n        transform: [\n          {\n            translateY: animatedPosition.value,\n          },\n        ],\n      }),\n      [animatedPosition, animatedIndex]\n    );\n    const containerStyle = useMemo(\n      () => [_providedStyle, styles.container, containerAnimatedStyle],\n      [_providedStyle, containerAnimatedStyle]\n    );\n    const contentContainerAnimatedStyle = useAnimatedStyle(() => {\n      /**\n       * if content height was provided, then we skip setting\n       * calculated height.\n       */\n      if (_providedContentHeight) {\n        return {};\n      }\n\n      return {\n        height: animate({\n          point: animatedContentHeightMax.value,\n          configs: _providedAnimationConfigs,\n        }),\n      };\n    }, [animatedContentHeightMax, enableDynamicSizing, animatedContentHeight]);\n    const contentContainerStyle = useMemo(\n      () => [styles.contentContainer, contentContainerAnimatedStyle],\n      [contentContainerAnimatedStyle]\n    );\n    /**\n     * added safe area to prevent the sheet from floating above\n     * the bottom of the screen, when sheet being over dragged or\n     * when the sheet is resized.\n     */\n    const contentMaskContainerAnimatedStyle = useAnimatedStyle(() => {\n      if (detached) {\n        return {\n          overflow: 'visible',\n        };\n      }\n      return {\n        paddingBottom: animatedContainerHeight.value,\n      };\n    }, [detached]);\n    const contentMaskContainerStyle = useMemo(\n      () => [styles.contentMaskContainer, contentMaskContainerAnimatedStyle],\n      [contentMaskContainerAnimatedStyle]\n    );\n    //#endregion\n\n    //#region effects\n    /**\n     * React to `isLayoutCalculated` change, to insure that the sheet will\n     * appears/mounts only when all layout is been calculated.\n     *\n     * @alias OnMount\n     */\n    useAnimatedReaction(\n      () => isLayoutCalculated.value,\n      _isLayoutCalculated => {\n        /**\n         * exit method if:\n         * - layout is not calculated yet.\n         * - already did animate on mount.\n         */\n        if (!_isLayoutCalculated || isAnimatedOnMount.value) {\n          return;\n        }\n\n        let nextPosition;\n        if (_providedIndex === -1) {\n          nextPosition = animatedClosedPosition.value;\n          animatedNextPositionIndex.value = -1;\n        } else {\n          nextPosition = animatedSnapPoints.value[_providedIndex];\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnMount',\n          params: {\n            isLayoutCalculated: _isLayoutCalculated,\n            animatedSnapPoints: animatedSnapPoints.value,\n            nextPosition,\n          },\n        });\n\n        /**\n         * here we exit method early because the next position\n         * is out of the screen, this happens when `snapPoints`\n         * still being calculated.\n         */\n        if (\n          nextPosition === INITIAL_POSITION ||\n          nextPosition === animatedClosedPosition.value\n        ) {\n          isAnimatedOnMount.value = true;\n          animatedCurrentIndex.value = _providedIndex;\n          return;\n        }\n\n        if (animateOnMount) {\n          animateToPosition(nextPosition, ANIMATION_SOURCE.MOUNT);\n        } else {\n          animatedPosition.value = nextPosition;\n        }\n        isAnimatedOnMount.value = true;\n      },\n      [_providedIndex, animateOnMount]\n    );\n\n    /**\n     * React to `snapPoints` change, to insure that the sheet position reflect\n     * to the current point correctly.\n     *\n     * @alias OnSnapPointsChange\n     */\n    useAnimatedReaction(\n      () => ({\n        snapPoints: animatedSnapPoints.value,\n        containerHeight: animatedContainerHeight.value,\n      }),\n      (result, _previousResult) => {\n        const { snapPoints, containerHeight } = result;\n        const _previousSnapPoints = _previousResult?.snapPoints;\n        const _previousContainerHeight = _previousResult?.containerHeight;\n\n        let nextPosition;\n        let animationConfig;\n        let animationSource = ANIMATION_SOURCE.SNAP_POINT_CHANGE;\n\n        /**\n         * if the bottom sheet is closing and the container gets resized,\n         * then we restart the closing animation to the new position.\n         */\n        if (\n          animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n          animatedNextPositionIndex.value === -1 &&\n          _previousContainerHeight !== containerHeight\n        ) {\n          animationSource = ANIMATION_SOURCE.CONTAINER_RESIZE;\n          animationConfig = {\n            duration: 0,\n          };\n          animateToPosition(\n            containerHeight,\n            animationSource,\n            0,\n            animationConfig\n          );\n        }\n\n        if (\n          JSON.stringify(snapPoints) === JSON.stringify(_previousSnapPoints) ||\n          !isLayoutCalculated.value ||\n          !isAnimatedOnMount.value ||\n          containerHeight <= 0\n        ) {\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnSnapPointChange',\n          params: {\n            snapPoints,\n          },\n        });\n\n        /**\n         * if snap points changed while sheet is animating, then\n         * we stop the animation and animate to the updated point.\n         */\n        if (\n          animatedAnimationState.value === ANIMATION_STATE.RUNNING &&\n          animatedNextPositionIndex.value !== animatedCurrentIndex.value\n        ) {\n          nextPosition =\n            animatedNextPositionIndex.value !== -1\n              ? snapPoints[animatedNextPositionIndex.value]\n              : animatedNextPosition.value;\n        } else if (animatedCurrentIndex.value === -1) {\n          nextPosition = animatedClosedPosition.value;\n        } else if (isInTemporaryPosition.value) {\n          nextPosition = getNextPosition();\n        } else {\n          nextPosition = snapPoints[animatedCurrentIndex.value];\n\n          /**\n           * if snap points changes because of the container height change,\n           * then we skip the snap animation by setting the duration to 0.\n           */\n          if (containerHeight !== _previousContainerHeight) {\n            animationSource = ANIMATION_SOURCE.CONTAINER_RESIZE;\n            animationConfig = {\n              duration: 0,\n            };\n          }\n        }\n        animateToPosition(nextPosition, animationSource, 0, animationConfig);\n      }\n    );\n\n    /**\n     * React to keyboard appearance state.\n     *\n     * @alias OnKeyboardStateChange\n     */\n    useAnimatedReaction(\n      () => ({\n        _keyboardState: animatedKeyboardState.value,\n        _keyboardHeight: animatedKeyboardHeight.value,\n      }),\n      (result, _previousResult) => {\n        const { _keyboardState, _keyboardHeight } = result;\n        const _previousKeyboardState = _previousResult?._keyboardState;\n        const _previousKeyboardHeight = _previousResult?._keyboardHeight;\n\n        /**\n         * Calculate the keyboard height in the container.\n         */\n        animatedKeyboardHeightInContainer.value = $modal\n          ? Math.abs(\n              _keyboardHeight -\n                Math.abs(bottomInset - animatedContainerOffset.value.bottom)\n            )\n          : Math.abs(_keyboardHeight - animatedContainerOffset.value.bottom);\n\n        const hasActiveGesture =\n          animatedContentGestureState.value === State.ACTIVE ||\n          animatedContentGestureState.value === State.BEGAN ||\n          animatedHandleGestureState.value === State.ACTIVE ||\n          animatedHandleGestureState.value === State.BEGAN;\n\n        if (\n          /**\n           * if keyboard state is equal to the previous state, then exit the method\n           */\n          (_keyboardState === _previousKeyboardState &&\n            _keyboardHeight === _previousKeyboardHeight) ||\n          /**\n           * if user is interacting with sheet, then exit the method\n           */\n          hasActiveGesture ||\n          /**\n           * if sheet not animated on mount yet, then exit the method\n           */\n          !isAnimatedOnMount.value ||\n          /**\n           * if new keyboard state is hidden and blur behavior is none, then exit the method\n           */\n          (_keyboardState === KEYBOARD_STATE.HIDDEN &&\n            keyboardBlurBehavior === KEYBOARD_BLUR_BEHAVIOR.none) ||\n          /**\n           * if platform is android and the input mode is resize, then exit the method\n           */\n          (Platform.OS === 'android' &&\n            keyboardBehavior === KEYBOARD_BEHAVIOR.interactive &&\n            android_keyboardInputMode === KEYBOARD_INPUT_MODE.adjustResize)\n        ) {\n          animatedKeyboardHeightInContainer.value = 0;\n          return;\n        }\n\n        runOnJS(print)({\n          component: BottomSheet.name,\n          method: 'useAnimatedReaction::OnKeyboardStateChange',\n          params: {\n            keyboardState: _keyboardState,\n            keyboardHeight: _keyboardHeight,\n          },\n        });\n\n        let animationConfigs = getKeyboardAnimationConfigs(\n          keyboardAnimationEasing.value,\n          keyboardAnimationDuration.value\n        );\n        const nextPosition = getNextPosition();\n        animateToPosition(\n          nextPosition,\n          ANIMATION_SOURCE.KEYBOARD,\n          0,\n          animationConfigs\n        );\n      },\n      [\n        $modal,\n        bottomInset,\n        keyboardBehavior,\n        keyboardBlurBehavior,\n        android_keyboardInputMode,\n        animatedContainerOffset,\n        getNextPosition,\n      ]\n    );\n\n    /**\n     * sets provided animated position\n     */\n    useAnimatedReaction(\n      () => animatedPosition.value,\n      _animatedPosition => {\n        if (_providedAnimatedPosition) {\n          _providedAnimatedPosition.value = _animatedPosition + topInset;\n        }\n      }\n    );\n\n    /**\n     * sets provided animated index\n     */\n    useAnimatedReaction(\n      () => animatedIndex.value,\n      _animatedIndex => {\n        if (_providedAnimatedIndex) {\n          _providedAnimatedIndex.value = _animatedIndex;\n        }\n      }\n    );\n\n    /**\n     * React to internal variables to detect change in snap position.\n     *\n     * @alias OnChange\n     */\n    useAnimatedReaction(\n      () => ({\n        _animatedIndex: animatedIndex.value,\n        _animatedPosition: animatedPosition.value,\n        _animationState: animatedAnimationState.value,\n        _contentGestureState: animatedContentGestureState.value,\n        _handleGestureState: animatedHandleGestureState.value,\n      }),\n      ({\n        _animatedIndex,\n        _animationState,\n        _contentGestureState,\n        _handleGestureState,\n      }) => {\n        /**\n         * exit the method if animation state is not stopped.\n         */\n        if (_animationState !== ANIMATION_STATE.STOPPED) {\n          return;\n        }\n\n        /**\n         * exit the method if animated index value\n         * has fraction, e.g. 1.99, 0.52\n         */\n        if (_animatedIndex % 1 !== 0) {\n          return;\n        }\n\n        /**\n         * exit the method if there any active gesture.\n         */\n        const hasNoActiveGesture =\n          (_contentGestureState === State.END ||\n            _contentGestureState === State.UNDETERMINED ||\n            _contentGestureState === State.CANCELLED) &&\n          (_handleGestureState === State.END ||\n            _handleGestureState === State.UNDETERMINED ||\n            _handleGestureState === State.CANCELLED);\n        if (!hasNoActiveGesture) {\n          return;\n        }\n\n        /**\n         * if the index is not equal to the current index,\n         * than the sheet position had changed and we trigger\n         * the `onChange` callback.\n         */\n        if (_animatedIndex !== animatedCurrentIndex.value) {\n          runOnJS(print)({\n            component: BottomSheet.name,\n            method: 'useAnimatedReaction::OnChange',\n            params: {\n              animatedCurrentIndex: animatedCurrentIndex.value,\n              animatedIndex: _animatedIndex,\n            },\n          });\n\n          animatedCurrentIndex.value = _animatedIndex;\n          runOnJS(handleOnChange)(_animatedIndex);\n        }\n\n        /**\n         * if index is `-1` than we fire the `onClose` callback.\n         */\n        if (_animatedIndex === -1 && _providedOnClose) {\n          runOnJS(print)({\n            component: BottomSheet.name,\n            method: 'useAnimatedReaction::onClose',\n            params: {\n              animatedCurrentIndex: animatedCurrentIndex.value,\n              animatedIndex: _animatedIndex,\n            },\n          });\n          runOnJS(_providedOnClose)();\n        }\n      },\n      [handleOnChange, _providedOnClose]\n    );\n\n    /**\n     * React to `index` prop to snap the sheet to the new position.\n     *\n     * @alias onIndexChange\n     */\n    useEffect(() => {\n      if (isAnimatedOnMount.value) {\n        handleSnapToIndex(_providedIndex);\n      }\n    }, [\n      _providedIndex,\n      animatedCurrentIndex,\n      isAnimatedOnMount,\n      handleSnapToIndex,\n    ]);\n    //#endregion\n\n    // render\n    print({\n      component: BottomSheet.name,\n      method: 'render',\n      params: {\n        animatedSnapPoints: animatedSnapPoints.value,\n        animatedCurrentIndex: animatedCurrentIndex.value,\n        providedIndex: _providedIndex,\n      },\n    });\n    return (\n      <BottomSheetProvider value={externalContextVariables}>\n        <BottomSheetInternalProvider value={internalContextVariables}>\n          <BottomSheetGestureHandlersProvider\n            gestureEventsHandlersHook={gestureEventsHandlersHook}\n          >\n            <BottomSheetBackdropContainer\n              key=\"BottomSheetBackdropContainer\"\n              animatedIndex={animatedIndex}\n              animatedPosition={animatedPosition}\n              backdropComponent={backdropComponent}\n            />\n            <BottomSheetContainer\n              key=\"BottomSheetContainer\"\n              shouldCalculateHeight={!$modal}\n              containerHeight={_animatedContainerHeight}\n              containerOffset={animatedContainerOffset}\n              topInset={topInset}\n              bottomInset={bottomInset}\n              detached={detached}\n              style={_providedContainerStyle}\n            >\n              <Animated.View style={containerStyle}>\n                <BottomSheetBackgroundContainer\n                  key=\"BottomSheetBackgroundContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  backgroundComponent={backgroundComponent}\n                  backgroundStyle={_providedBackgroundStyle}\n                />\n                <Animated.View\n                  pointerEvents=\"box-none\"\n                  style={contentMaskContainerStyle}\n                >\n                  <BottomSheetDraggableView\n                    key=\"BottomSheetRootDraggableView\"\n                    style={contentContainerStyle}\n                  >\n                    {typeof Content === 'function' ? <Content /> : Content}\n\n                    {footerComponent && (\n                      <BottomSheetFooterContainer\n                        footerComponent={footerComponent}\n                      />\n                    )}\n                  </BottomSheetDraggableView>\n                </Animated.View>\n                <BottomSheetHandleContainer\n                  key=\"BottomSheetHandleContainer\"\n                  animatedIndex={animatedIndex}\n                  animatedPosition={animatedPosition}\n                  handleHeight={animatedHandleHeight}\n                  enableHandlePanningGesture={enableHandlePanningGesture}\n                  enableOverDrag={enableOverDrag}\n                  enablePanDownToClose={enablePanDownToClose}\n                  overDragResistanceFactor={overDragResistanceFactor}\n                  keyboardBehavior={keyboardBehavior}\n                  handleComponent={handleComponent}\n                  handleStyle={_providedHandleStyle}\n                  handleIndicatorStyle={_providedHandleIndicatorStyle}\n                />\n              </Animated.View>\n              {/* <BottomSheetDebugView\n                values={{\n                  // topInset,\n                  // bottomInset,\n                  animatedSheetState,\n                  // animatedScrollableState,\n                  // animatedScrollableOverrideState,\n                  // isScrollableRefreshable,\n                  // animatedScrollableContentOffsetY,\n                  // keyboardState,\n                  // animatedIndex,\n                  // animatedCurrentIndex,\n                  // animatedPosition,\n                  animatedContainerHeight,\n                  animatedSheetHeight,\n                  animatedHandleHeight,\n                  animatedContentHeight,\n                  // // keyboardHeight,\n                  // isLayoutCalculated,\n                  // isContentHeightFixed,\n                  // isInTemporaryPosition,\n                }}\n              /> */}\n            </BottomSheetContainer>\n          </BottomSheetGestureHandlersProvider>\n        </BottomSheetInternalProvider>\n      </BottomSheetProvider>\n    );\n  }\n);\n\nconst BottomSheet = memo(BottomSheetComponent);\nBottomSheet.displayName = 'BottomSheet';\n\nexport default BottomSheet;\n"]}