{"version":3,"sources":["BottomSheetBackdrop.tsx"],"names":["BottomSheetBackdropComponent","animatedIndex","opacity","_providedOpacity","appearsOnIndex","_providedAppearsOnIndex","disappearsOnIndex","_providedDisappearsOnIndex","enableTouchThrough","_providedEnableTouchThrough","pressBehavior","DEFAULT_PRESS_BEHAVIOR","onPress","style","children","snapToIndex","close","DEFAULT_OPACITY","DEFAULT_APPEARS_ON_INDEX","DEFAULT_DISAPPEARS_ON_INDEX","DEFAULT_ENABLE_TOUCH_THROUGH","pointerEvents","setPointerEvents","handleOnPress","handleContainerTouchability","shouldDisableTouchability","gestureHandler","onFinish","containerAnimatedStyle","value","Extrapolate","CLAMP","flex","containerStyle","styles","container","previous","BottomSheetBackdrop","displayName"],"mappings":"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","sourcesContent":["import React, { memo, useCallback, useMemo, useState } from 'react';\nimport { ViewProps } from 'react-native';\nimport Animated, {\n  interpolate,\n  Extrapolate,\n  useAnimatedStyle,\n  useAnimatedReaction,\n  useAnimatedGestureHandler,\n  runOnJS,\n} from 'react-native-reanimated';\nimport {\n  TapGestureHandler,\n  TapGestureHandlerGestureEvent,\n} from 'react-native-gesture-handler';\nimport { useBottomSheet } from '../../hooks';\nimport {\n  DEFAULT_OPACITY,\n  DEFAULT_APPEARS_ON_INDEX,\n  DEFAULT_DISAPPEARS_ON_INDEX,\n  DEFAULT_ENABLE_TOUCH_THROUGH,\n  DEFAULT_PRESS_BEHAVIOR,\n} from './constants';\nimport { styles } from './styles';\nimport type { BottomSheetDefaultBackdropProps } from './types';\n\nconst BottomSheetBackdropComponent = ({\n  animatedIndex,\n  opacity: _providedOpacity,\n  appearsOnIndex: _providedAppearsOnIndex,\n  disappearsOnIndex: _providedDisappearsOnIndex,\n  enableTouchThrough: _providedEnableTouchThrough,\n  pressBehavior = DEFAULT_PRESS_BEHAVIOR,\n  onPress,\n  style,\n  children,\n}: BottomSheetDefaultBackdropProps) => {\n  //#region hooks\n  const { snapToIndex, close } = useBottomSheet();\n  //#endregion\n\n  //#region defaults\n  const opacity = _providedOpacity ?? DEFAULT_OPACITY;\n  const appearsOnIndex = _providedAppearsOnIndex ?? DEFAULT_APPEARS_ON_INDEX;\n  const disappearsOnIndex =\n    _providedDisappearsOnIndex ?? DEFAULT_DISAPPEARS_ON_INDEX;\n  const enableTouchThrough =\n    _providedEnableTouchThrough ?? DEFAULT_ENABLE_TOUCH_THROUGH;\n  //#endregion\n\n  //#region variables\n  const [pointerEvents, setPointerEvents] = useState<\n    ViewProps['pointerEvents']\n  >(enableTouchThrough ? 'none' : 'auto');\n  //#endregion\n\n  //#region callbacks\n  const handleOnPress = useCallback(() => {\n    onPress?.();\n\n    if (pressBehavior === 'close') {\n      close();\n    } else if (pressBehavior === 'collapse') {\n      snapToIndex(disappearsOnIndex as number);\n    } else if (typeof pressBehavior === 'number') {\n      snapToIndex(pressBehavior);\n    }\n  }, [snapToIndex, close, disappearsOnIndex, pressBehavior, onPress]);\n  const handleContainerTouchability = useCallback(\n    (shouldDisableTouchability: boolean) => {\n      setPointerEvents(shouldDisableTouchability ? 'none' : 'auto');\n    },\n    []\n  );\n  //#endregion\n\n  //#region tap gesture\n  const gestureHandler =\n    useAnimatedGestureHandler<TapGestureHandlerGestureEvent>(\n      {\n        onFinish: () => {\n          runOnJS(handleOnPress)();\n        },\n      },\n      [handleOnPress]\n    );\n  //#endregion\n\n  //#region styles\n  const containerAnimatedStyle = useAnimatedStyle(() => ({\n    opacity: interpolate(\n      animatedIndex.value,\n      [-1, disappearsOnIndex, appearsOnIndex],\n      [0, 0, opacity],\n      Extrapolate.CLAMP\n    ),\n    flex: 1,\n  }));\n  const containerStyle = useMemo(\n    () => [styles.container, style, containerAnimatedStyle],\n    [style, containerAnimatedStyle]\n  );\n  //#endregion\n\n  //#region effects\n  useAnimatedReaction(\n    () => animatedIndex.value <= disappearsOnIndex,\n    (shouldDisableTouchability, previous) => {\n      if (shouldDisableTouchability === previous) {\n        return;\n      }\n      runOnJS(handleContainerTouchability)(shouldDisableTouchability);\n    },\n    [disappearsOnIndex]\n  );\n  //#endregion\n\n  return pressBehavior !== 'none' ? (\n    <TapGestureHandler onGestureEvent={gestureHandler}>\n      <Animated.View\n        style={containerStyle}\n        pointerEvents={pointerEvents}\n        accessible={true}\n        accessibilityRole=\"button\"\n        accessibilityLabel=\"Bottom Sheet backdrop\"\n        accessibilityHint={`Tap to ${\n          typeof pressBehavior === 'string' ? pressBehavior : 'move'\n        } the Bottom Sheet`}\n      >\n        {children}\n      </Animated.View>\n    </TapGestureHandler>\n  ) : (\n    <Animated.View pointerEvents={pointerEvents} style={containerStyle}>\n      {children}\n    </Animated.View>\n  );\n};\n\nconst BottomSheetBackdrop = memo(BottomSheetBackdropComponent);\nBottomSheetBackdrop.displayName = 'BottomSheetBackdrop';\n\nexport default BottomSheetBackdrop;\n"]}