{"version":3,"sources":["BottomSheetTextInput.tsx"],"names":["BottomSheetTextInputComponent","onFocus","onBlur","rest","ref","shouldHandleKeyboardEvents","value","handleOnFocus","args","handleOnBlur","BottomSheetTextInput","displayName"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;;;;;AAGA,MAAMA,6BAA6B,gBAAG,uBAGpC,CAAC;AAAEC,EAAAA,OAAF;AAAWC,EAAAA,MAAX;AAAmB,KAAGC;AAAtB,CAAD,EAA+BC,GAA/B,KAAuC;AACvC;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAiC,oCAAvC;AAEA,wBAAU,MAAM;AACd,WAAO,MAAM;AACX;AACAA,MAAAA,0BAA0B,CAACC,KAA3B,GAAmC,KAAnC;AACD,KAHD;AAID,GALD,EAKG,CAACD,0BAAD,CALH,EAJuC,CAUvC;AAEA;;AACA,QAAME,aAAa,GAAG,wBACpBC,IAAI,IAAI;AACNH,IAAAA,0BAA0B,CAACC,KAA3B,GAAmC,IAAnC;;AACA,QAAIL,OAAJ,EAAa;AACXA,MAAAA,OAAO,CAACO,IAAD,CAAP;AACD;AACF,GANmB,EAOpB,CAACP,OAAD,EAAUI,0BAAV,CAPoB,CAAtB;AASA,QAAMI,YAAY,GAAG,wBACnBD,IAAI,IAAI;AACNH,IAAAA,0BAA0B,CAACC,KAA3B,GAAmC,KAAnC;;AACA,QAAIJ,MAAJ,EAAY;AACVA,MAAAA,MAAM,CAACM,IAAD,CAAN;AACD;AACF,GANkB,EAOnB,CAACN,MAAD,EAASG,0BAAT,CAPmB,CAArB,CAtBuC,CA+BvC;;AAEA,sBACE,6BAAC,oCAAD;AACE,IAAA,GAAG,EAAED,GADP;AAEE,IAAA,OAAO,EAAEG,aAFX;AAGE,IAAA,MAAM,EAAEE;AAHV,KAIMN,IAJN,EADF;AAQD,CA5CqC,CAAtC;AA8CA,MAAMO,oBAAoB,gBAAG,iBAAKV,6BAAL,CAA7B;AACAU,oBAAoB,CAACC,WAArB,GAAmC,sBAAnC;eAEeD,oB","sourcesContent":["import React, { memo, useCallback, forwardRef, useEffect } from 'react';\nimport { TextInput } from 'react-native-gesture-handler';\nimport { useBottomSheetInternal } from '../../hooks';\nimport type { BottomSheetTextInputProps } from './types';\n\nconst BottomSheetTextInputComponent = forwardRef<\n  TextInput,\n  BottomSheetTextInputProps\n>(({ onFocus, onBlur, ...rest }, ref) => {\n  //#region hooks\n  const { shouldHandleKeyboardEvents } = useBottomSheetInternal();\n\n  useEffect(() => {\n    return () => {\n      // Reset the flag on unmount\n      shouldHandleKeyboardEvents.value = false;\n    };\n  }, [shouldHandleKeyboardEvents]);\n  //#endregion\n\n  //#region callbacks\n  const handleOnFocus = useCallback(\n    args => {\n      shouldHandleKeyboardEvents.value = true;\n      if (onFocus) {\n        onFocus(args);\n      }\n    },\n    [onFocus, shouldHandleKeyboardEvents]\n  );\n  const handleOnBlur = useCallback(\n    args => {\n      shouldHandleKeyboardEvents.value = false;\n      if (onBlur) {\n        onBlur(args);\n      }\n    },\n    [onBlur, shouldHandleKeyboardEvents]\n  );\n  //#endregion\n\n  return (\n    <TextInput\n      ref={ref}\n      onFocus={handleOnFocus}\n      onBlur={handleOnBlur}\n      {...rest}\n    />\n  );\n});\n\nconst BottomSheetTextInput = memo(BottomSheetTextInputComponent);\nBottomSheetTextInput.displayName = 'BottomSheetTextInput';\n\nexport default BottomSheetTextInput;\n"]}