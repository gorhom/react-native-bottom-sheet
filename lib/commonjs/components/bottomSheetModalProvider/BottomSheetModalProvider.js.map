{"version":3,"sources":["BottomSheetModalProvider.tsx"],"names":["BottomSheetModalProviderWrapper","children","animatedContainerHeight","INITIAL_CONTAINER_HEIGHT","animatedContainerOffset","INITIAL_CONTAINER_OFFSET","sheetsQueueRef","handleMountSheet","key","ref","stackBehavior","_sheetsQueue","current","slice","sheetIndex","findIndex","item","sheetOnTop","length","currentMountedSheet","willUnmount","MODAL_STACK_BEHAVIOR","replace","minimize","splice","restore","push","handleUnmountSheet","hasMinimizedSheet","minimizedSheet","handleWillUnmountSheet","handleDismiss","sheetToBeDismissed","find","dismiss","handleDismissAll","map","externalContextVariables","dismissAll","internalContextVariables","containerHeight","containerOffset","mountSheet","unmountSheet","willUnmountSheet"],"mappings":"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","sourcesContent":["import React, { useCallback, useMemo, useRef } from 'react';\nimport { useSharedValue } from 'react-native-reanimated';\nimport { PortalProvider } from '@gorhom/portal';\nimport {\n  BottomSheetModalProvider,\n  BottomSheetModalInternalProvider,\n} from '../../contexts';\nimport BottomSheetContainer from '../bottomSheetContainer';\nimport { MODAL_STACK_BEHAVIOR } from '../../constants';\nimport {\n  INITIAL_CONTAINER_HEIGHT,\n  INITIAL_CONTAINER_OFFSET,\n} from '../bottomSheet/constants';\nimport type { BottomSheetModalStackBehavior } from '../bottomSheetModal';\nimport type {\n  BottomSheetModalProviderProps,\n  BottomSheetModalRef,\n} from './types';\n\nconst BottomSheetModalProviderWrapper = ({\n  children,\n}: BottomSheetModalProviderProps) => {\n  //#region layout variables\n  const animatedContainerHeight = useSharedValue(INITIAL_CONTAINER_HEIGHT);\n  const animatedContainerOffset = useSharedValue(INITIAL_CONTAINER_OFFSET);\n  //#endregion\n\n  //#region variables\n  const sheetsQueueRef = useRef<BottomSheetModalRef[]>([]);\n  //#endregion\n\n  //#region private methods\n  const handleMountSheet = useCallback(\n    (key: string, ref: any, stackBehavior: BottomSheetModalStackBehavior) => {\n      const _sheetsQueue = sheetsQueueRef.current.slice();\n      const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n      const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n      /**\n       * Exit the method, if sheet is already presented\n       * and at the top.\n       */\n      if (sheetIndex !== -1 && sheetOnTop) {\n        return;\n      }\n\n      /**\n       * Minimize the current sheet if:\n       * - it exists.\n       * - it is not unmounting.\n       * - stack behavior is 'replace'.\n       */\n      const currentMountedSheet = _sheetsQueue[_sheetsQueue.length - 1];\n      if (\n        currentMountedSheet &&\n        !currentMountedSheet.willUnmount &&\n        stackBehavior === MODAL_STACK_BEHAVIOR.replace\n      ) {\n        currentMountedSheet.ref?.current?.minimize();\n      }\n\n      /**\n       * Restore and remove incoming sheet from the queue,\n       * if it was registered.\n       */\n      if (sheetIndex !== -1) {\n        _sheetsQueue.splice(sheetIndex, 1);\n        ref?.current?.restore();\n      }\n\n      _sheetsQueue.push({\n        key,\n        ref,\n        willUnmount: false,\n      });\n      sheetsQueueRef.current = _sheetsQueue;\n    },\n    []\n  );\n  const handleUnmountSheet = useCallback((key: string) => {\n    const _sheetsQueue = sheetsQueueRef.current.slice();\n    const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n    const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n    /**\n     * Here we remove the unmounted sheet and update\n     * the sheets queue.\n     */\n    _sheetsQueue.splice(sheetIndex, 1);\n    sheetsQueueRef.current = _sheetsQueue;\n\n    /**\n     * Here we try to restore previous sheet position if unmounted\n     * sheet was on top. This is needed when user dismiss\n     * the modal by panning down.\n     */\n    const hasMinimizedSheet = sheetsQueueRef.current.length > 0;\n    const minimizedSheet =\n      sheetsQueueRef.current[sheetsQueueRef.current.length - 1];\n    if (\n      sheetOnTop &&\n      hasMinimizedSheet &&\n      minimizedSheet &&\n      !minimizedSheet.willUnmount\n    ) {\n      sheetsQueueRef.current[\n        sheetsQueueRef.current.length - 1\n      ].ref?.current?.restore();\n    }\n  }, []);\n  const handleWillUnmountSheet = useCallback((key: string) => {\n    const _sheetsQueue = sheetsQueueRef.current.slice();\n    const sheetIndex = _sheetsQueue.findIndex(item => item.key === key);\n    const sheetOnTop = sheetIndex === _sheetsQueue.length - 1;\n\n    /**\n     * Here we mark the sheet that will unmount,\n     * so it won't be restored.\n     */\n    if (sheetIndex !== -1) {\n      _sheetsQueue[sheetIndex].willUnmount = true;\n    }\n\n    /**\n     * Here we try to restore previous sheet position,\n     * This is needed when user dismiss the modal by fire the dismiss action.\n     */\n    const hasMinimizedSheet = _sheetsQueue.length > 1;\n    if (sheetOnTop && hasMinimizedSheet) {\n      _sheetsQueue[_sheetsQueue.length - 2].ref?.current?.restore();\n    }\n\n    sheetsQueueRef.current = _sheetsQueue;\n  }, []);\n  //#endregion\n\n  //#region public methods\n  const handleDismiss = useCallback((key?: string) => {\n    const sheetToBeDismissed = key\n      ? sheetsQueueRef.current.find(item => item.key === key)\n      : sheetsQueueRef.current[sheetsQueueRef.current.length - 1];\n    if (sheetToBeDismissed) {\n      sheetToBeDismissed.ref?.current?.dismiss();\n      return true;\n    }\n    return false;\n  }, []);\n  const handleDismissAll = useCallback(() => {\n    sheetsQueueRef.current.map(item => {\n      item.ref?.current?.dismiss();\n    });\n  }, []);\n  //#endregion\n\n  //#region context variables\n  const externalContextVariables = useMemo(\n    () => ({\n      dismiss: handleDismiss,\n      dismissAll: handleDismissAll,\n    }),\n    [handleDismiss, handleDismissAll]\n  );\n  const internalContextVariables = useMemo(\n    () => ({\n      containerHeight: animatedContainerHeight,\n      containerOffset: animatedContainerOffset,\n      mountSheet: handleMountSheet,\n      unmountSheet: handleUnmountSheet,\n      willUnmountSheet: handleWillUnmountSheet,\n    }),\n    [\n      animatedContainerHeight,\n      animatedContainerOffset,\n      handleMountSheet,\n      handleUnmountSheet,\n      handleWillUnmountSheet,\n    ]\n  );\n  //#endregion\n\n  //#region renders\n  return (\n    <BottomSheetModalProvider value={externalContextVariables}>\n      <BottomSheetModalInternalProvider value={internalContextVariables}>\n        <BottomSheetContainer\n          containerOffset={animatedContainerOffset}\n          containerHeight={animatedContainerHeight}\n          children={null}\n        />\n        <PortalProvider>{children}</PortalProvider>\n      </BottomSheetModalInternalProvider>\n    </BottomSheetModalProvider>\n  );\n  //#endregion\n};\n\nexport default BottomSheetModalProviderWrapper;\n"]}